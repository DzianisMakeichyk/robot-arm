{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera } from '@react-three/drei';\nimport { Shadows, Ground } from '@components/stage';\nimport { RobotArm } from \"@components/model/RobotArm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'ws://localhost:4001';\nconst INITIAL_ROBOT_STATE = {\n  nodes: {\n    main_column: {\n      position: [0, 1.462, 0],\n      scale: [1, 1, 1],\n      rotation: [0, 0, 0]\n    },\n    upper_arm: {\n      position: [2.335, 0, 0.094],\n      scale: [0.684, 1, 1],\n      rotation: [0, 0, 0]\n    },\n    wrist_extension: {\n      position: [3.231, 6.551, 0.007],\n      scale: [0.264, 0.264, 0.264],\n      rotation: [0, 0, 0]\n    },\n    hand: {\n      position: [3.368, 5.728, -0.119],\n      scale: [1, 0.068, 0.327],\n      rotation: [0, 1.5708, 0]\n    },\n    gripper: {\n      position: [3.33, 5.545, 0.006],\n      scale: [-0.01, -0.132, -0.325],\n      rotation: [0, 1.5708, 0]\n    }\n  }\n};\nconst calculateMotorAngles = nodes => {\n  var _nodes$main_column, _nodes$main_column$ro, _nodes$upper_arm, _nodes$upper_arm$rota, _nodes$wrist_extensio, _nodes$wrist_extensio2;\n  return {\n    A: (((_nodes$main_column = nodes.main_column) === null || _nodes$main_column === void 0 ? void 0 : (_nodes$main_column$ro = _nodes$main_column.rotation) === null || _nodes$main_column$ro === void 0 ? void 0 : _nodes$main_column$ro[1]) || 0) * (180 / Math.PI),\n    B: (((_nodes$upper_arm = nodes.upper_arm) === null || _nodes$upper_arm === void 0 ? void 0 : (_nodes$upper_arm$rota = _nodes$upper_arm.rotation) === null || _nodes$upper_arm$rota === void 0 ? void 0 : _nodes$upper_arm$rota[1]) || 0) * (180 / Math.PI),\n    C: (((_nodes$wrist_extensio = nodes.wrist_extension) === null || _nodes$wrist_extensio === void 0 ? void 0 : (_nodes$wrist_extensio2 = _nodes$wrist_extensio.rotation) === null || _nodes$wrist_extensio2 === void 0 ? void 0 : _nodes$wrist_extensio2[1]) || 0) * (180 / Math.PI)\n  };\n};\nexport default function App() {\n  const [robotData, setRobotData] = useState(INITIAL_ROBOT_STATE);\n  const [ws, setWs] = useState(null);\n  const [isMoving, setIsMoving] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [error, setError] = useState('');\n  const [motorStatus, setMotorStatus] = useState({\n    base: 'unknown',\n    elbow: 'unknown',\n    height: 'unknown'\n  });\n  useEffect(() => {\n    console.log('Connecting to:', SOCKET_SERVER_URL);\n    const websocket = new WebSocket(SOCKET_SERVER_URL);\n    websocket.onopen = () => {\n      console.log('WebSocket Connected');\n      setConnectionStatus('connected');\n      setWs(websocket);\n\n      // Request initial state\n      // websocket.send(JSON.stringify({ action: 'test_motor' }));\n    };\n    websocket.onmessage = event => {\n      console.log('Received raw message:', event.data);\n      try {\n        const response = JSON.parse(event.data);\n        console.log('Parsed response:', response);\n        if (response.state && response.state.nodes) {\n          console.log('Updating robot data with:', response.state);\n          setRobotData(response.state);\n        }\n        if (response.status === 'error') {\n          console.error('Server error:', response.message);\n          setError(response.message);\n        }\n        if (response.message) {\n          const newStatus = {\n            ...motorStatus\n          };\n          if (response.message.includes('Base motor')) {\n            newStatus.base = response.message.includes('not available') ? 'disconnected' : 'connected';\n          }\n          if (response.message.includes('Elbow motor')) {\n            newStatus.elbow = response.message.includes('not available') ? 'disconnected' : 'connected';\n          }\n          if (response.message.includes('Height motor')) {\n            newStatus.height = response.message.includes('not available') ? 'disconnected' : 'connected';\n          }\n          setMotorStatus(newStatus);\n        }\n      } catch (e) {\n        console.error('Parse error:', e);\n      }\n    };\n    websocket.onclose = event => {\n      console.log('WebSocket closed:', event);\n      setConnectionStatus('disconnected');\n      setWs(null);\n    };\n    websocket.onerror = error => {\n      console.error('WebSocket error:', error);\n      setConnectionStatus('error');\n    };\n    return () => websocket.close();\n  }, []);\n\n  // const calculateMotorAngles = (nodes: any) => {\n  //     const motorAngles = {\n  //         A: 0,\n  //         B: 0,\n  //         C: 0\n  //     };\n\n  //     // Base rotation (A)\n  //     if (nodes.main_column?.rotation) {\n  //         motorAngles.A = (nodes.main_column.rotation[1] * 180) / Math.PI;\n  //         motorAngles.A = Math.max(-180, Math.min(180, motorAngles.A));\n  //     }\n\n  //     // Elbow (B)\n  //     if (nodes.upper_arm?.rotation) {\n  //         motorAngles.B = (nodes.upper_arm.rotation[1] * 180) / Math.PI;\n  //         motorAngles.B = Math.max(-90, Math.min(90, motorAngles.B));\n  //     }\n\n  //     // Height (C)\n  //     if (nodes.wrist_extension?.rotation) {\n  //         motorAngles.C = (nodes.wrist_extension.rotation[1] * 180) / Math.PI;\n  //         motorAngles.C = Math.max(0, Math.min(120, motorAngles.C));\n  //     }\n\n  //     return motorAngles;\n  // };\n\n  const updateRobotData = useCallback(newData => {\n    if (!ws || ws.readyState !== WebSocket.OPEN) return;\n\n    // @ts-ignore\n    setRobotData(prevData => {\n      if (prevData) {\n        const updatedData = {\n          ...prevData,\n          ...newData\n        };\n        const motorAngles = calculateMotorAngles(updatedData.nodes);\n\n        // Wysyłamy tylko kąty silników\n        ws.send(JSON.stringify({\n          motors: motorAngles\n        }));\n        return updatedData;\n      }\n      return prevData;\n    });\n  }, [ws]);\n  const handleDragStart = () => setIsMoving(true);\n  const handleDragEnd = () => setIsMoving(false);\n  const testMotor = useCallback(() => {\n    if ((ws === null || ws === void 0 ? void 0 : ws.readyState) === WebSocket.OPEN) {\n      ws.send(JSON.stringify({\n        action: 'test_motor'\n      }));\n    } else {\n      console.error('WebSocket not connected');\n    }\n  }, [ws]);\n  useEffect(() => {\n    console.log('Current robot data:', robotData);\n  }, [robotData]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#ff4444',\n        color: 'white',\n        padding: '20px',\n        borderRadius: '5px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          marginTop: '10px',\n          padding: '5px 15px',\n          backgroundColor: 'white',\n          border: 'none',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        left: '10px',\n        zIndex: 1000,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '5px',\n          background: connectionStatus === 'connected' ? '#4CAF50' : '#f44336',\n          color: 'white',\n          borderRadius: '4px'\n        },\n        children: [\"Socket Status: \", connectionStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testMotor,\n        style: {\n          padding: '10px',\n          background: '#2196F3',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Test Motor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '5px',\n          background: '#333',\n          color: 'white',\n          borderRadius: '4px'\n        },\n        children: [\"Motors:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), \"Base: \", motorStatus.base, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), \"Elbow: \", motorStatus.elbow, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), \"Height: \", motorStatus.height]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this), robotData && /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        fov: 40,\n        position: [10, 8, 25]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RobotArm\n      // @ts-ignore\n      , {\n        data: robotData,\n        onUpdate: updateRobotData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Shadows, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Environment, {\n        preset: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        makeDefault: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GizmoHelper, {\n        alignment: \"bottom-right\",\n        margin: [100, 100],\n        children: /*#__PURE__*/_jsxDEV(GizmoViewport, {\n          labelColor: \"white\",\n          axisHeadScale: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"names":["React","useState","useEffect","useCallback","Canvas","GizmoHelper","GizmoViewport","OrbitControls","Environment","Stats","PerspectiveCamera","Shadows","Ground","RobotArm","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_SERVER_URL","INITIAL_ROBOT_STATE","nodes","main_column","position","scale","rotation","upper_arm","wrist_extension","hand","gripper","calculateMotorAngles","_nodes$main_column","_nodes$main_column$ro","_nodes$upper_arm","_nodes$upper_arm$rota","_nodes$wrist_extensio","_nodes$wrist_extensio2","A","Math","PI","B","C","App","robotData","setRobotData","ws","setWs","isMoving","setIsMoving","connectionStatus","setConnectionStatus","error","setError","motorStatus","setMotorStatus","base","elbow","height","console","log","websocket","WebSocket","onopen","onmessage","event","data","response","JSON","parse","state","status","message","newStatus","includes","e","onclose","onerror","close","updateRobotData","newData","readyState","OPEN","prevData","updatedData","motorAngles","send","stringify","motors","handleDragStart","handleDragEnd","testMotor","action","style","top","left","transform","backgroundColor","color","padding","borderRadius","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","marginTop","border","cursor","zIndex","display","flexDirection","gap","background","makeDefault","fov","onUpdate","preset","alignment","margin","labelColor","axisHeadScale"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport {Canvas} from '@react-three/fiber';\nimport {GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera} from '@react-three/drei';\nimport {Shadows, Ground} from '@components/stage';\nimport {Robot} from '@types';\nimport {RobotArm} from \"@components/model/RobotArm\";\n\nconst SOCKET_SERVER_URL = 'ws://localhost:4001';\n\nconst INITIAL_ROBOT_STATE = {\n    nodes: {\n        main_column: {\n            position: [0, 1.462, 0],\n            scale: [1, 1, 1],\n            rotation: [0, 0, 0]\n        },\n        upper_arm: {\n            position: [2.335, 0, 0.094],\n            scale: [0.684, 1, 1],\n            rotation: [0, 0, 0]\n        },\n        wrist_extension: {\n            position: [3.231, 6.551, 0.007],\n            scale: [0.264, 0.264, 0.264],\n            rotation: [0, 0, 0]\n        },\n        hand: {\n            position: [3.368, 5.728, -0.119],\n            scale: [1, 0.068, 0.327],\n            rotation: [0, 1.5708, 0]\n        },\n        gripper: {\n            position: [3.33, 5.545, 0.006],\n            scale: [-0.01, -0.132, -0.325],\n            rotation: [0, 1.5708, 0]\n        }\n    }\n};\n\nconst calculateMotorAngles = (nodes: any) => {\n    return {\n        A: (nodes.main_column?.rotation?.[1] || 0) * (180 / Math.PI),\n        B: (nodes.upper_arm?.rotation?.[1] || 0) * (180 / Math.PI),\n        C: (nodes.wrist_extension?.rotation?.[1] || 0) * (180 / Math.PI)\n    };\n};\n\nexport default function App() {\n    const [robotData, setRobotData] = useState(INITIAL_ROBOT_STATE);\n    const [ws, setWs] = useState<WebSocket | null>(null);\n    const [isMoving, setIsMoving] = useState(false);\n    const [connectionStatus, setConnectionStatus] = useState('disconnected');\n    const [error, setError] = useState<string>('');\n    const [motorStatus, setMotorStatus] = useState<{[key: string]: string}>({\n        base: 'unknown',\n        elbow: 'unknown',\n        height: 'unknown'\n    });\n\n    useEffect(() => {\n        console.log('Connecting to:', SOCKET_SERVER_URL);\n        const websocket = new WebSocket(SOCKET_SERVER_URL);\n        \n        websocket.onopen = () => {\n            console.log('WebSocket Connected');\n            setConnectionStatus('connected');\n            setWs(websocket);\n            \n            // Request initial state\n            // websocket.send(JSON.stringify({ action: 'test_motor' }));\n        };\n\n        websocket.onmessage = (event) => {\n            console.log('Received raw message:', event.data);\n            try {\n                const response = JSON.parse(event.data);\n                console.log('Parsed response:', response);\n                \n                if (response.state && response.state.nodes) {\n                    console.log('Updating robot data with:', response.state);\n                    setRobotData(response.state);\n                }\n                \n                if (response.status === 'error') {\n                    console.error('Server error:', response.message);\n                    setError(response.message);\n                }\n                if (response.message) {\n                    const newStatus = {...motorStatus};\n                    if (response.message.includes('Base motor')) {\n                        newStatus.base = response.message.includes('not available') ? 'disconnected' : 'connected';\n                    }\n                    if (response.message.includes('Elbow motor')) {\n                        newStatus.elbow = response.message.includes('not available') ? 'disconnected' : 'connected';\n                    }\n                    if (response.message.includes('Height motor')) {\n                        newStatus.height = response.message.includes('not available') ? 'disconnected' : 'connected';\n                    }\n                    setMotorStatus(newStatus);\n                }\n            } catch (e) {\n                console.error('Parse error:', e);\n            }\n        };\n\n        websocket.onclose = (event) => {\n            console.log('WebSocket closed:', event);\n            setConnectionStatus('disconnected');\n            setWs(null);\n        };\n        \n        websocket.onerror = (error) => {\n            console.error('WebSocket error:', error);\n            setConnectionStatus('error');\n        };\n\n        \n        \n        return () => websocket.close();\n    }, []);\n\n    // const calculateMotorAngles = (nodes: any) => {\n    //     const motorAngles = {\n    //         A: 0,\n    //         B: 0,\n    //         C: 0\n    //     };\n    \n    //     // Base rotation (A)\n    //     if (nodes.main_column?.rotation) {\n    //         motorAngles.A = (nodes.main_column.rotation[1] * 180) / Math.PI;\n    //         motorAngles.A = Math.max(-180, Math.min(180, motorAngles.A));\n    //     }\n    \n    //     // Elbow (B)\n    //     if (nodes.upper_arm?.rotation) {\n    //         motorAngles.B = (nodes.upper_arm.rotation[1] * 180) / Math.PI;\n    //         motorAngles.B = Math.max(-90, Math.min(90, motorAngles.B));\n    //     }\n    \n    //     // Height (C)\n    //     if (nodes.wrist_extension?.rotation) {\n    //         motorAngles.C = (nodes.wrist_extension.rotation[1] * 180) / Math.PI;\n    //         motorAngles.C = Math.max(0, Math.min(120, motorAngles.C));\n    //     }\n    \n    //     return motorAngles;\n    // };\n    \n    const updateRobotData = useCallback((newData: Partial<Robot.RobotNodes>) => {\n        if (!ws || ws.readyState !== WebSocket.OPEN) return;\n\n        // @ts-ignore\n        setRobotData(prevData => {\n            if (prevData) {\n                const updatedData = {...prevData, ...newData};\n                const motorAngles = calculateMotorAngles(updatedData.nodes);\n\n                // Wysyłamy tylko kąty silników\n                ws.send(JSON.stringify({ motors: motorAngles }));\n\n                return updatedData;\n            }\n            return prevData;\n        });\n    }, [ws]);\n\n    const handleDragStart = () => setIsMoving(true);\n    const handleDragEnd = () => setIsMoving(false);\n\n    const testMotor = useCallback(() => {\n        if (ws?.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({ action: 'test_motor' }));\n        } else {\n            console.error('WebSocket not connected');\n        }\n    }, [ws]);\n\n    useEffect(() => {\n        console.log('Current robot data:', robotData);\n    }, [robotData]);\n\n    if (error) {\n        return (\n            <div style={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: '#ff4444',\n                color: 'white',\n                padding: '20px',\n                borderRadius: '5px',\n                textAlign: 'center'\n            }}>\n                <div>{error}</div>\n                <button \n                    onClick={() => window.location.reload()}\n                    style={{\n                        marginTop: '10px',\n                        padding: '5px 15px',\n                        backgroundColor: 'white',\n                        border: 'none',\n                        borderRadius: '3px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Retry\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <div style={{\n                position: 'fixed',\n                top: '10px',\n                left: '10px',\n                zIndex: 1000,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '10px'\n            }}>\n                <div style={{\n                    padding: '5px',\n                    background: connectionStatus === 'connected' ? '#4CAF50' : '#f44336',\n                    color: 'white',\n                    borderRadius: '4px'\n                }}>\n                    Socket Status: {connectionStatus}\n                </div>\n                <button\n                    onClick={testMotor}\n                    style={{\n                        padding: '10px',\n                        background: '#2196F3',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Test Motor\n                </button>\n                <div style={{\n                    padding: '5px',\n                    background: '#333',\n                    color: 'white',\n                    borderRadius: '4px'\n                }}>\n                    Motors: \n                    <br />\n                    Base: {motorStatus.base}\n                    <br />\n                    Elbow: {motorStatus.elbow}\n                    <br />\n                    Height: {motorStatus.height}\n                </div>\n            </div>\n            {robotData && (\n                <Canvas>\n                    <PerspectiveCamera makeDefault fov={40} position={[10, 8, 25]}/>\n                    <RobotArm\n                        // @ts-ignore\n                        data={robotData}\n                        onUpdate={updateRobotData}\n                    />\n                    <Shadows/>\n                    <Ground/>\n                    <Environment preset=\"city\"/>\n                    <OrbitControls makeDefault/>\n                    <GizmoHelper alignment=\"bottom-right\" margin={[100, 100]}>\n                        <GizmoViewport labelColor=\"white\" axisHeadScale={1}/>\n                    </GizmoHelper>\n                    <Stats/>\n                </Canvas>\n            )}\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}