{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Canvas}from'@react-three/fiber';import{GizmoHelper,GizmoViewport,OrbitControls,Environment,Stats,PerspectiveCamera}from'@react-three/drei';import{Shadows,Ground}from'@components/stage';// import socketIOClient, { Socket } from 'socket.io-client';\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SOCKET_SERVER_URL='ws://192.168.2.3:4000';export default function App(){const[robotData,setRobotData]=useState();const[ws,setWs]=useState(null);const[connectionStatus,setConnectionStatus]=useState('disconnected');const[error,setError]=useState('');useEffect(()=>{console.log('Connecting to:',SOCKET_SERVER_URL);const websocket=new WebSocket(SOCKET_SERVER_URL);websocket.onopen=()=>{console.log('Connected to:',SOCKET_SERVER_URL);setConnectionStatus('connected');setWs(websocket);};websocket.onclose=()=>{console.log('Disconnected from:',SOCKET_SERVER_URL);setConnectionStatus('disconnected');setWs(null);};websocket.onerror=error=>{console.error('WebSocket error:',error);setConnectionStatus('error');setError('WebSocket connection failed');};websocket.onmessage=event=>{console.log('Received:',event.data);// Handle incoming messages\n};return()=>{websocket.close();};},[]);const testMotor=useCallback(()=>{if(ws&&ws.readyState===WebSocket.OPEN){ws.send(JSON.stringify({action:'test_motor'}));}else{console.error('WebSocket not connected');}},[ws]);// Display error if any\nif(error){return/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:'50%',left:'50%',transform:'translate(-50%, -50%)',backgroundColor:'#ff4444',color:'white',padding:'20px',borderRadius:'5px',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),style:{marginTop:'10px',padding:'5px 15px',backgroundColor:'white',border:'none',borderRadius:'3px',cursor:'pointer'},children:\"Retry\"})]});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:'10px',left:'10px',zIndex:1000,display:'flex',flexDirection:'column',gap:'10px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:'5px',background:connectionStatus==='connected'?'#4CAF50':'#f44336',color:'white',borderRadius:'4px'},children:[\"Socket Status: \",connectionStatus]}),/*#__PURE__*/_jsx(\"button\",{onClick:testMotor,style:{padding:'10px',background:'#2196F3',color:'white',border:'none',borderRadius:'4px',cursor:'pointer'},children:\"Test Motor\"})]}),robotData&&/*#__PURE__*/_jsxs(Canvas,{children:[/*#__PURE__*/_jsx(PerspectiveCamera,{makeDefault:true,fov:40,position:[10,8,25]}),/*#__PURE__*/_jsx(Shadows,{}),/*#__PURE__*/_jsx(Ground,{}),/*#__PURE__*/_jsx(Environment,{preset:\"city\"}),/*#__PURE__*/_jsx(OrbitControls,{makeDefault:true}),/*#__PURE__*/_jsx(GizmoHelper,{alignment:\"bottom-right\",margin:[100,100],children:/*#__PURE__*/_jsx(GizmoViewport,{labelColor:\"white\",axisHeadScale:1})}),/*#__PURE__*/_jsx(Stats,{})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useCallback","Canvas","GizmoHelper","GizmoViewport","OrbitControls","Environment","Stats","PerspectiveCamera","Shadows","Ground","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SOCKET_SERVER_URL","App","robotData","setRobotData","ws","setWs","connectionStatus","setConnectionStatus","error","setError","console","log","websocket","WebSocket","onopen","onclose","onerror","onmessage","event","data","close","testMotor","readyState","OPEN","send","JSON","stringify","action","style","position","top","left","transform","backgroundColor","color","padding","borderRadius","textAlign","children","onClick","window","location","reload","marginTop","border","cursor","zIndex","display","flexDirection","gap","background","makeDefault","fov","preset","alignment","margin","labelColor","axisHeadScale"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport {Canvas} from '@react-three/fiber';\nimport {GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera} from '@react-three/drei';\nimport {Shadows, Ground} from '@components/stage';\n// import socketIOClient, { Socket } from 'socket.io-client';\nimport {Robot} from '@types';\nimport {RobotArm} from \"@components/model/RobotArm\";\n\nconst SOCKET_SERVER_URL = 'ws://192.168.2.3:4000';\n\nexport default function App() {\n    const [robotData, setRobotData] = useState<Robot.RobotNodes>();    \n    const [ws, setWs] = useState<WebSocket | null>(null);\n    const [connectionStatus, setConnectionStatus] = useState('disconnected');\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        console.log('Connecting to:', SOCKET_SERVER_URL);\n        const websocket = new WebSocket(SOCKET_SERVER_URL);\n      \n        websocket.onopen = () => {\n          console.log('Connected to:', SOCKET_SERVER_URL);\n          setConnectionStatus('connected');\n          setWs(websocket);\n        };\n      \n        websocket.onclose = () => {\n          console.log('Disconnected from:', SOCKET_SERVER_URL);\n          setConnectionStatus('disconnected');\n          setWs(null);\n        };\n      \n        websocket.onerror = (error) => {\n          console.error('WebSocket error:', error);\n          setConnectionStatus('error');\n          setError('WebSocket connection failed');\n        };\n\n        websocket.onmessage = (event) => {\n          console.log('Received:', event.data);\n          // Handle incoming messages\n        };\n      \n        return () => {\n          websocket.close();\n        };\n    }, []);\n\n    const testMotor = useCallback(() => {\n        if (ws && ws.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({ action: 'test_motor' }));\n        } else {\n            console.error('WebSocket not connected');\n        }\n    }, [ws]);\n\n\n    // Display error if any\n    if (error) {\n        return (\n            <div style={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: '#ff4444',\n                color: 'white',\n                padding: '20px',\n                borderRadius: '5px',\n                textAlign: 'center'\n            }}>\n                <div>{error}</div>\n                <button \n                    onClick={() => window.location.reload()}\n                    style={{\n                        marginTop: '10px',\n                        padding: '5px 15px',\n                        backgroundColor: 'white',\n                        border: 'none',\n                        borderRadius: '3px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Retry\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <div style={{\n                position: 'fixed',\n                top: '10px',\n                left: '10px',\n                zIndex: 1000,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '10px'\n            }}>\n                <div style={{\n                    padding: '5px',\n                    background: connectionStatus === 'connected' ? '#4CAF50' : '#f44336',\n                    color: 'white',\n                    borderRadius: '4px'\n                }}>\n                    Socket Status: {connectionStatus}\n                </div>\n                <button\n                    onClick={testMotor}\n                    style={{\n                        padding: '10px',\n                        background: '#2196F3',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Test Motor\n                </button>\n            </div>\n            {robotData && (\n                <Canvas>\n                    <PerspectiveCamera makeDefault fov={40} position={[10, 8, 25]}/>\n                    {/* <RobotArm data={robotData} onUpdate={updateRobotData}/> */}\n                    <Shadows/>\n                    <Ground/>\n                    <Environment preset=\"city\"/>\n                    <OrbitControls makeDefault/>\n                    <GizmoHelper alignment=\"bottom-right\" margin={[100, 100]}>\n                        <GizmoViewport labelColor=\"white\" axisHeadScale={1}/>\n                    </GizmoHelper>\n                    <Stats/>\n                </Canvas>\n            )}\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}