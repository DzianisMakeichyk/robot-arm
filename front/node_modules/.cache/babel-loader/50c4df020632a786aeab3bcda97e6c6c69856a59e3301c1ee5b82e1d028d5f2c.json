{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera } from '@react-three/drei';\nimport { Shadows, Ground } from '@components/stage';\nimport { io } from 'socket.io-client';\nimport { RobotArm } from \"@components/model/RobotArm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [robotData, setRobotData] = useState();\n  const [socket, setSocket] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const newSocket = io('http://localhost:4000', {\n      transports: ['polling'],\n      timeout: 10000,\n      forceNew: true\n    });\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setError('');\n      newSocket.emit('state:get');\n    });\n    newSocket.on('connect_error', err => {\n      console.error('Connection error:', err);\n      setError(`Unable to connect to server: ${err.message}`);\n    });\n    newSocket.on('state', data => {\n      console.log('Received state:', data);\n      setRobotData(data);\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const updateRobotData = useCallback(newData => {\n    if (!(socket !== null && socket !== void 0 && socket.connected)) return;\n    setRobotData(prevData => {\n      if (prevData) {\n        const updatedData = {\n          ...prevData,\n          ...newData\n        };\n        socket.emit(\"state:update\", updatedData);\n        return updatedData;\n      }\n      return prevData;\n    });\n  }, [socket]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#ff4444',\n        color: 'white',\n        padding: '20px',\n        borderRadius: '5px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          marginTop: '10px',\n          padding: '5px 15px',\n          backgroundColor: 'white',\n          border: 'none',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: robotData && /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        fov: 40,\n        position: [10, 8, 25]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RobotArm, {\n        data: robotData,\n        onUpdate: updateRobotData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Shadows, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Environment, {\n        preset: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        makeDefault: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GizmoHelper, {\n        alignment: \"bottom-right\",\n        margin: [100, 100],\n        children: /*#__PURE__*/_jsxDEV(GizmoViewport, {\n          labelColor: \"white\",\n          axisHeadScale: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"/NgHdQRWwJn51D6OU6qOoWQdpiw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Canvas","GizmoHelper","GizmoViewport","OrbitControls","Environment","Stats","PerspectiveCamera","Shadows","Ground","io","RobotArm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","robotData","setRobotData","socket","setSocket","error","setError","newSocket","transports","timeout","forceNew","on","console","log","emit","err","message","data","close","updateRobotData","newData","connected","prevData","updatedData","style","position","top","left","transform","backgroundColor","color","padding","borderRadius","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","marginTop","border","cursor","makeDefault","fov","onUpdate","preset","alignment","margin","labelColor","axisHeadScale","_c","$RefreshReg$"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport {Canvas} from '@react-three/fiber'\nimport {GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera} from '@react-three/drei'\nimport {Shadows, Ground} from '@components/stage'\nimport { io } from 'socket.io-client'\nimport {Robot} from '@types'\nimport {RobotArm} from \"@components/model/RobotArm\"\n\nexport default function App() {\n    const [robotData, setRobotData] = useState<Robot.RobotNodes>()\n    const [socket, setSocket] = useState<any>(null);\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        const newSocket = io('http://localhost:4000', {\n            transports: ['polling'],\n            timeout: 10000,\n            forceNew: true\n        });\n\n        newSocket.on('connect', () => {\n            console.log('Connected to server');\n            setError('');\n            newSocket.emit('state:get');\n        });\n\n        newSocket.on('connect_error', (err) => {\n            console.error('Connection error:', err);\n            setError(`Unable to connect to server: ${err.message}`);\n        });\n\n        newSocket.on('state', (data: Robot.RobotNodes) => {\n            console.log('Received state:', data);\n            setRobotData(data);\n        });\n\n        setSocket(newSocket);\n\n        return () => {\n            newSocket.close();\n        };\n    }, []);\n\n    const updateRobotData = useCallback((newData: Partial<Robot.RobotNodes>) => {\n        if (!socket?.connected) return;\n\n        setRobotData(prevData => {\n            if (prevData) {\n                const updatedData = {...prevData, ...newData};\n                socket.emit(\"state:update\", updatedData);\n                return updatedData;\n            }\n            return prevData;\n        });\n    }, [socket]);\n\n    if (error) {\n        return (\n            <div style={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: '#ff4444',\n                color: 'white',\n                padding: '20px',\n                borderRadius: '5px',\n                textAlign: 'center'\n            }}>\n                <div>{error}</div>\n                <button \n                    onClick={() => window.location.reload()}\n                    style={{\n                        marginTop: '10px',\n                        padding: '5px 15px',\n                        backgroundColor: 'white',\n                        border: 'none',\n                        borderRadius: '3px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Retry\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            {robotData && (\n                <Canvas>\n                    <PerspectiveCamera makeDefault fov={40} position={[10, 8, 25]}/>\n                    <RobotArm data={robotData} onUpdate={updateRobotData}/>\n                    <Shadows/>\n                    <Ground/>\n                    <Environment preset=\"city\"/>\n                    <OrbitControls makeDefault/>\n                    <GizmoHelper alignment=\"bottom-right\" margin={[100, 100]}>\n                        <GizmoViewport labelColor=\"white\" axisHeadScale={1}/>\n                    </GizmoHelper>\n                    <Stats/>\n                </Canvas>\n            )}\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}