{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx\";\nimport React from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { Gizmo } from '@components/gizmo';\nimport { context } from '@components/gizmo/context';\nimport { Robot } from '@types';\nimport Mesh from \"@components/mesh/Mesh\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RobotArm = ({\n  data,\n  onUpdate,\n  onDragStart,\n  onDragEnd\n}) => {\n  const {\n    nodes\n  } = useGLTF('/robot.glb');\n  const node = Robot.NodeName;\n  const handleGizmoUpdate = (nodeName, newMatrix) => {\n    console.log(`Updating ${nodeName}:`, newMatrix);\n    const newData = {\n      nodes: {\n        ...data.nodes,\n        [nodeName]: {\n          ...data.nodes[nodeName],\n          position: data.nodes[nodeName].position,\n          scale: data.nodes[nodeName].scale,\n          rotation: newMatrix\n        }\n      }\n    };\n    onUpdate(newData);\n  };\n  const configuration = {\n    onDragStart: () => {\n      console.log('Drag start');\n      onDragStart();\n    },\n    onDrag: matrix => {\n      console.log('Dragging');\n    },\n    onDragEnd: () => {\n      console.log('Drag end');\n      onDragEnd();\n    },\n    scale: 1,\n    translationLimits: undefined,\n    rotationLimits: undefined\n  };\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(context.Provider, {\n      value: configuration,\n      children: /*#__PURE__*/_jsxDEV(Gizmo, {\n        scale: 5,\n        disableTranslation: true,\n        activeAxes: [true, false, true],\n        userData: [node.mainColumn],\n        onUpdate: newMatrix => handleGizmoUpdate(node.mainColumn, newMatrix),\n        children: [/*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.mainColumn],\n          data: data.nodes[node.mainColumn]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n          activeAxes: [false, true, false],\n          translationLimits: [undefined, [-1, .8], undefined],\n          disableRotation: true,\n          anchor: [-0.8, 1.5, 0],\n          scale: 1,\n          userData: [node.upperArm],\n          onUpdate: newMatrix => handleGizmoUpdate(node.upperArm, newMatrix),\n          children: [/*#__PURE__*/_jsxDEV(Mesh, {\n            node: nodes[node.upperArm],\n            data: data.nodes[node.upperArm]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n            node: nodes[node.wristExtension],\n            data: data.nodes[node.wristExtension]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n            node: nodes[node.hand],\n            data: data.nodes[node.hand]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n            activeAxes: [false, false, true],\n            translationLimits: [undefined, undefined, [0, 0.4]],\n            anchor: [2, 0, 2],\n            scale: 0.75,\n            userData: [node.gripper],\n            onUpdate: newMatrix => handleGizmoUpdate(node.gripper, newMatrix),\n            children: /*#__PURE__*/_jsxDEV(Mesh, {\n              node: nodes[node.gripper],\n              data: data.nodes[node.gripper]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["React","useGLTF","Gizmo","context","Robot","Mesh","jsxDEV","_jsxDEV","RobotArm","data","onUpdate","onDragStart","onDragEnd","nodes","node","NodeName","handleGizmoUpdate","nodeName","newMatrix","console","log","newData","position","scale","rotation","configuration","onDrag","matrix","translationLimits","undefined","rotationLimits","children","Provider","value","disableTranslation","activeAxes","userData","mainColumn","fileName","_jsxFileName","lineNumber","columnNumber","disableRotation","anchor","upperArm","wristExtension","hand","gripper"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx"],"sourcesContent":["import React from 'react';\nimport { useGLTF } from '@react-three/drei';\nimport { Gizmo } from '@components/gizmo';\nimport { context } from '@components/gizmo/context';\nimport { Robot } from '@types';\nimport Mesh from \"@components/mesh/Mesh\";\nimport { Matrix4 } from 'three';\n\nexport const RobotArm = ({data, onUpdate, onDragStart, onDragEnd}: {\n    data: Robot.RobotNodes;\n    onUpdate: (newData: Partial<Robot.RobotNodes>) => void;\n    onDragStart: () => void;\n    onDragEnd: () => void;\n}) => {\n    const { nodes } = useGLTF('/robot.glb') as unknown as Robot.DreiGLTF;\n    const node = Robot.NodeName;\n\n    const handleGizmoUpdate = (nodeName: Robot.NodeName, newMatrix: [number, number, number]) => {\n        console.log(`Updating ${nodeName}:`, newMatrix);\n        \n        const newData: Partial<Robot.RobotNodes> = {\n            nodes: {\n                ...data.nodes,\n                [nodeName]: {\n                    ...data.nodes[nodeName],\n                    position: data.nodes[nodeName].position,\n                    scale: data.nodes[nodeName].scale,\n                    rotation: newMatrix\n                }\n            }\n        };\n\n        onUpdate(newData);\n    };\n\n    const configuration: Robot.GizmoState = {\n        onDragStart: () => {\n            console.log('Drag start');\n            onDragStart();\n        },\n        onDrag: (matrix: Matrix4) => {\n            console.log('Dragging');\n        },\n        onDragEnd: () => {\n            console.log('Drag end');\n            onDragEnd();\n        },\n        scale: 1,\n        translationLimits: undefined,\n        rotationLimits: undefined\n    };\n\n    return (\n        <group>\n            <context.Provider value={configuration}>\n                <Gizmo scale={5}\n                       disableTranslation\n                       activeAxes={[true, false, true]}\n                       userData={[node.mainColumn]}\n                       onUpdate={newMatrix => handleGizmoUpdate(node.mainColumn, newMatrix)}>\n                    <Mesh node={nodes[node.mainColumn]} data={data.nodes[node.mainColumn]}/>\n\n                    <Gizmo activeAxes={[false, true, false]}\n                           translationLimits={[undefined, [-1, .8], undefined]}\n                           disableRotation\n                           anchor={[-0.8, 1.5, 0]}\n                           scale={1}\n                           userData={[node.upperArm]}\n                           onUpdate={newMatrix => handleGizmoUpdate(node.upperArm, newMatrix)}>\n\n                        <Mesh node={nodes[node.upperArm]} data={data.nodes[node.upperArm]}/>\n                        <Mesh node={nodes[node.wristExtension]} data={data.nodes[node.wristExtension]}/>\n                        <Mesh node={nodes[node.hand]} data={data.nodes[node.hand]}/>\n\n                        <Gizmo activeAxes={[false, false, true]}\n                               translationLimits={[undefined, undefined, [0, 0.4]]}\n                               anchor={[2, 0, 2]}\n                               scale={0.75}\n                               userData={[node.gripper]}\n                               onUpdate={newMatrix => handleGizmoUpdate(node.gripper, newMatrix)}>\n                            <Mesh node={nodes[node.gripper]} data={data.nodes[node.gripper]}/>\n                        </Gizmo>\n                    </Gizmo>\n                </Gizmo>\n            </context.Provider>\n        </group>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}