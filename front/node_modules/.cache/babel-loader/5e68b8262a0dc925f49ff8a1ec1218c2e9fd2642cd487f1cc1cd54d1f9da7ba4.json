{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera } from '@react-three/drei';\nimport { Shadows, Ground } from '@components/stage';\nimport { RobotArm } from \"@components/model/RobotArm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'ws://192.168.2.3:4000';\nexport default function App() {\n  const [robotData, setRobotData] = useState();\n  const [ws, setWs] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    console.log('Connecting to:', SOCKET_SERVER_URL);\n    const websocket = new WebSocket(SOCKET_SERVER_URL);\n    websocket.onopen = () => {\n      console.log('Connected to:', SOCKET_SERVER_URL);\n      setConnectionStatus('connected');\n      setWs(websocket);\n    };\n    websocket.onmessage = event => {\n      try {\n        const response = JSON.parse(event.data);\n        console.log('Received:', response);\n        if (response.state) {\n          setRobotData(response.state);\n        }\n        if (response.status === 'error') {\n          console.error('Error:', response.message);\n          setError(response.message);\n        }\n      } catch (e) {\n        console.error('Error parsing response:', e);\n      }\n    };\n    websocket.onclose = () => {\n      console.log('Disconnected from:', SOCKET_SERVER_URL);\n      setConnectionStatus('disconnected');\n      setWs(null);\n    };\n    websocket.onerror = error => {\n      console.error('WebSocket error:', error);\n      setConnectionStatus('error');\n      setError('WebSocket connection failed');\n    };\n    return () => websocket.close();\n  }, []);\n  const updateRobotData = useCallback(newData => {\n    if (!ws || ws.readyState !== WebSocket.OPEN) {\n      console.error('WebSocket not connected');\n      return;\n    }\n    setRobotData(prevData => {\n      if (prevData) {\n        const updatedData = {\n          ...prevData,\n          ...newData\n        };\n        ws.send(JSON.stringify({\n          action: 'update',\n          ...updatedData\n        }));\n        return updatedData;\n      }\n      return prevData;\n    });\n  }, [ws]);\n  const testMotor = useCallback(() => {\n    if ((ws === null || ws === void 0 ? void 0 : ws.readyState) === WebSocket.OPEN) {\n      ws.send(JSON.stringify({\n        action: 'test_motor'\n      }));\n    } else {\n      console.error('WebSocket not connected');\n    }\n  }, [ws]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#ff4444',\n        color: 'white',\n        padding: '20px',\n        borderRadius: '5px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          marginTop: '10px',\n          padding: '5px 15px',\n          backgroundColor: 'white',\n          border: 'none',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        left: '10px',\n        zIndex: 1000,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '5px',\n          background: connectionStatus === 'connected' ? '#4CAF50' : '#f44336',\n          color: 'white',\n          borderRadius: '4px'\n        },\n        children: [\"Socket Status: \", connectionStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testMotor,\n        style: {\n          padding: '10px',\n          background: '#2196F3',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Test Motor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), robotData && /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        fov: 40,\n        position: [10, 8, 25]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RobotArm, {\n        data: robotData,\n        onUpdate: updateRobotData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Shadows, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Environment, {\n        preset: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        makeDefault: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GizmoHelper, {\n        alignment: \"bottom-right\",\n        margin: [100, 100],\n        children: /*#__PURE__*/_jsxDEV(GizmoViewport, {\n          labelColor: \"white\",\n          axisHeadScale: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"names":["React","useState","useEffect","useCallback","Canvas","GizmoHelper","GizmoViewport","OrbitControls","Environment","Stats","PerspectiveCamera","Shadows","Ground","RobotArm","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_SERVER_URL","App","robotData","setRobotData","ws","setWs","connectionStatus","setConnectionStatus","error","setError","console","log","websocket","WebSocket","onopen","onmessage","event","response","JSON","parse","data","state","status","message","e","onclose","onerror","close","updateRobotData","newData","readyState","OPEN","prevData","updatedData","send","stringify","action","testMotor","style","position","top","left","transform","backgroundColor","color","padding","borderRadius","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","marginTop","border","cursor","zIndex","display","flexDirection","gap","background","makeDefault","fov","onUpdate","preset","alignment","margin","labelColor","axisHeadScale"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport {Canvas} from '@react-three/fiber';\nimport {GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera} from '@react-three/drei';\nimport {Shadows, Ground} from '@components/stage';\nimport {Robot} from '@types';\nimport {RobotArm} from \"@components/model/RobotArm\";\n\nconst SOCKET_SERVER_URL = 'ws://192.168.2.3:4000';\n\nexport default function App() {\n    const [robotData, setRobotData] = useState<Robot.RobotNodes>();    \n    const [ws, setWs] = useState<WebSocket | null>(null);\n    const [connectionStatus, setConnectionStatus] = useState('disconnected');\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        console.log('Connecting to:', SOCKET_SERVER_URL);\n        const websocket = new WebSocket(SOCKET_SERVER_URL);\n        \n        websocket.onopen = () => {\n            console.log('Connected to:', SOCKET_SERVER_URL);\n            setConnectionStatus('connected');\n            setWs(websocket);\n        };\n\n        websocket.onmessage = (event) => {\n            try {\n                const response = JSON.parse(event.data);\n                console.log('Received:', response);\n                \n                if (response.state) {\n                    setRobotData(response.state);\n                }\n                \n                if (response.status === 'error') {\n                    console.error('Error:', response.message);\n                    setError(response.message);\n                }\n            } catch (e) {\n                console.error('Error parsing response:', e);\n            }\n        };\n        \n        websocket.onclose = () => {\n            console.log('Disconnected from:', SOCKET_SERVER_URL);\n            setConnectionStatus('disconnected');\n            setWs(null);\n        };\n        \n        websocket.onerror = (error) => {\n            console.error('WebSocket error:', error);\n            setConnectionStatus('error');\n            setError('WebSocket connection failed');\n        };\n        \n        return () => websocket.close();\n    }, []);\n\n    const updateRobotData = useCallback((newData: Partial<Robot.RobotNodes>) => {\n        if (!ws || ws.readyState !== WebSocket.OPEN) {\n            console.error('WebSocket not connected');\n            return;\n        }\n\n        setRobotData(prevData => {\n            if (prevData) {\n                const updatedData = {...prevData, ...newData};\n                ws.send(JSON.stringify({\n                    action: 'update',\n                    ...updatedData\n                }));\n                return updatedData;\n            }\n            return prevData;\n        });\n    }, [ws]);\n\n    const testMotor = useCallback(() => {\n        if (ws?.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({ action: 'test_motor' }));\n        } else {\n            console.error('WebSocket not connected');\n        }\n    }, [ws]);\n\n    if (error) {\n        return (\n            <div style={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: '#ff4444',\n                color: 'white',\n                padding: '20px',\n                borderRadius: '5px',\n                textAlign: 'center'\n            }}>\n                <div>{error}</div>\n                <button \n                    onClick={() => window.location.reload()}\n                    style={{\n                        marginTop: '10px',\n                        padding: '5px 15px',\n                        backgroundColor: 'white',\n                        border: 'none',\n                        borderRadius: '3px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Retry\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <div style={{\n                position: 'fixed',\n                top: '10px',\n                left: '10px',\n                zIndex: 1000,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '10px'\n            }}>\n                <div style={{\n                    padding: '5px',\n                    background: connectionStatus === 'connected' ? '#4CAF50' : '#f44336',\n                    color: 'white',\n                    borderRadius: '4px'\n                }}>\n                    Socket Status: {connectionStatus}\n                </div>\n                <button\n                    onClick={testMotor}\n                    style={{\n                        padding: '10px',\n                        background: '#2196F3',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Test Motor\n                </button>\n            </div>\n            {robotData && (\n                <Canvas>\n                    <PerspectiveCamera makeDefault fov={40} position={[10, 8, 25]}/>\n                    <RobotArm data={robotData} onUpdate={updateRobotData}/>\n                    <Shadows/>\n                    <Ground/>\n                    <Environment preset=\"city\"/>\n                    <OrbitControls makeDefault/>\n                    <GizmoHelper alignment=\"bottom-right\" margin={[100, 100]}>\n                        <GizmoViewport labelColor=\"white\" axisHeadScale={1}/>\n                    </GizmoHelper>\n                    <Stats/>\n                </Canvas>\n            )}\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}