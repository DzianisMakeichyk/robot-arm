{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx\";\nimport { Gizmo } from '@components/gizmo';\nimport { useGLTF } from '@react-three/drei';\nimport { Robot } from '@types';\nimport Mesh from \"@components/mesh/Mesh\";\nimport { useState } from 'react';\nimport { Euler } from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RobotArm = ({\n  data,\n  onUpdate\n}) => {\n  const {\n    nodes\n  } = useGLTF('/robot.glb');\n  const node = Robot.NodeName;\n  const [previousAbsoluteRotation, setPreviousAbsoluteRotation] = useState({});\n  const [currentRotations, setCurrentRotations] = useState({});\n  const handleGizmoUpdate = (nodeName, newRotation) => {\n    // Get current absolute angle\n    const euler = new Euler().fromArray(newRotation);\n    const currentDegrees = euler.y * 180 / Math.PI;\n\n    // Calculate relative movement\n    const previousDegrees = currentRotations[nodeName] || 0;\n    const deltaRotation = currentDegrees - previousDegrees;\n\n    // Update state with new position\n    setCurrentRotations(prev => ({\n      ...prev,\n      [nodeName]: currentDegrees\n    }));\n    const newData = {\n      nodes: {\n        ...data.nodes,\n        [nodeName]: {\n          ...data.nodes[nodeName],\n          position: data.nodes[nodeName].position,\n          scale: data.nodes[nodeName].scale,\n          rotation: newRotation,\n          rotationDegrees: deltaRotation,\n          _updated: true\n        }\n      }\n    };\n\n    // Reset updated flag for other nodes\n    Object.keys(newData.nodes || {}).forEach(key => {\n      // @ts-ignore\n      if (key !== nodeName && newData.nodes && newData.nodes[key]) {\n        // @ts-ignore\n        newData.nodes[key]._updated = false;\n      }\n    });\n    onUpdate(newData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(Gizmo, {\n      scale: 5,\n      disableTranslation: true,\n      activeAxes: [true, false, true],\n      userData: [node.mainColumn],\n      onUpdate: newMatrix => handleGizmoUpdate(node.mainColumn, newMatrix),\n      children: [/*#__PURE__*/_jsxDEV(Mesh, {\n        node: nodes[node.mainColumn],\n        data: data.nodes[node.mainColumn]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n        activeAxes: [false, true, false],\n        translationLimits: [undefined, [-1, .8], undefined],\n        disableRotation: true,\n        anchor: [-0.8, 1.5, 0],\n        scale: 1,\n        userData: [node.upperArm],\n        onUpdate: newMatrix => handleGizmoUpdate(node.upperArm, newMatrix),\n        children: [/*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.upperArm],\n          data: data.nodes[node.upperArm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.wristExtension],\n          data: data.nodes[node.wristExtension]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.hand],\n          data: data.nodes[node.hand]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n          activeAxes: [false, false, true],\n          translationLimits: [undefined, undefined, [0, 0.4]],\n          anchor: [2, 0, 2],\n          scale: 0.75,\n          userData: [node.gripper],\n          onUpdate: newMatrix => handleGizmoUpdate(node.gripper, newMatrix),\n          children: /*#__PURE__*/_jsxDEV(Mesh, {\n            node: nodes[node.gripper],\n            data: data.nodes[node.gripper]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\nuseGLTF.preload('/robot.glb');","map":{"version":3,"names":["Gizmo","useGLTF","Robot","Mesh","useState","Euler","jsxDEV","_jsxDEV","RobotArm","data","onUpdate","nodes","node","NodeName","previousAbsoluteRotation","setPreviousAbsoluteRotation","currentRotations","setCurrentRotations","handleGizmoUpdate","nodeName","newRotation","euler","fromArray","currentDegrees","y","Math","PI","previousDegrees","deltaRotation","prev","newData","position","scale","rotation","rotationDegrees","_updated","Object","keys","forEach","key","children","disableTranslation","activeAxes","userData","mainColumn","newMatrix","fileName","_jsxFileName","lineNumber","columnNumber","translationLimits","undefined","disableRotation","anchor","upperArm","wristExtension","hand","gripper","preload"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx"],"sourcesContent":["import {Gizmo} from '@components/gizmo'\nimport {useGLTF} from '@react-three/drei'\nimport {Robot} from '@types'\nimport Mesh from \"@components/mesh/Mesh\"\nimport { useState } from 'react';\nimport { Euler } from 'three';\n\ninterface RobotProps {\n    data: Robot.RobotNodes;\n    onUpdate: (newData: Partial<Robot.RobotNodes>) => void;\n}\n\nexport const RobotArm = ({data, onUpdate}: RobotProps) => {\n    const {nodes} = useGLTF('/robot.glb') as unknown as Robot.DreiGLTF;\n    const node = Robot.NodeName;\n    const [previousAbsoluteRotation, setPreviousAbsoluteRotation] = useState<{[key: string]: number}>({});\n    const [currentRotations, setCurrentRotations] = useState<{[key: string]: number}>({});\n\n    const handleGizmoUpdate = (nodeName: Robot.NodeName, newRotation: [number, number, number]) => {\n        // Get current absolute angle\n        const euler = new Euler().fromArray(newRotation);\n        const currentDegrees = (euler.y * 180) / Math.PI;\n        \n        // Calculate relative movement\n        const previousDegrees = currentRotations[nodeName] || 0;\n        const deltaRotation = currentDegrees - previousDegrees;\n        \n        // Update state with new position\n        setCurrentRotations(prev => ({\n            ...prev,\n            [nodeName]: currentDegrees\n        }));\n\n        const newData: Partial<Robot.RobotNodes> = {\n            nodes: {\n                ...data.nodes,\n                [nodeName]: {\n                    ...data.nodes[nodeName],\n                    position: data.nodes[nodeName].position,\n                    scale: data.nodes[nodeName].scale,\n                    rotation: newRotation,\n                    rotationDegrees: deltaRotation,\n                    _updated: true\n                }\n            }\n        };\n\n        // Reset updated flag for other nodes\n        Object.keys(newData.nodes || {}).forEach((key) => {\n            // @ts-ignore\n            if (key !== nodeName && newData.nodes && newData.nodes[key]) {\n                // @ts-ignore\n                newData.nodes[key]._updated = false;\n            }\n        });\n\n        onUpdate(newData);\n    };\n\n    return (\n        <group>\n            <Gizmo scale={5}\n                   disableTranslation\n                   activeAxes={[true, false, true]}\n                   userData={[node.mainColumn]}\n                   onUpdate={(newMatrix) => handleGizmoUpdate(node.mainColumn, newMatrix)}>\n                <Mesh node={nodes[node.mainColumn]} data={data.nodes[node.mainColumn]}/>\n\n                <Gizmo activeAxes={[false, true, false]}\n                       translationLimits={[undefined, [-1, .8], undefined]}\n                       disableRotation\n                       anchor={[-0.8, 1.5, 0]}\n                       scale={1}\n                       userData={[node.upperArm]}\n                       onUpdate={(newMatrix) => handleGizmoUpdate(node.upperArm, newMatrix)}>\n\n                    <Mesh node={nodes[node.upperArm]} data={data.nodes[node.upperArm]}/>\n                    <Mesh node={nodes[node.wristExtension]} data={data.nodes[node.wristExtension]}/>\n                    <Mesh node={nodes[node.hand]} data={data.nodes[node.hand]}/>\n\n                    <Gizmo activeAxes={[false, false, true]}\n                           translationLimits={[undefined, undefined, [0, 0.4]]}\n                           anchor={[2, 0, 2]}\n                           scale={0.75}\n                           userData={[node.gripper]}\n                           onUpdate={(newMatrix) => handleGizmoUpdate(node.gripper, newMatrix)}>\n                        <Mesh node={nodes[node.gripper]} data={data.nodes[node.gripper]}/>\n                    </Gizmo>\n                </Gizmo>\n            </Gizmo>\n        </group>\n    );\n};\n\nuseGLTF.preload('/robot.glb');"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}