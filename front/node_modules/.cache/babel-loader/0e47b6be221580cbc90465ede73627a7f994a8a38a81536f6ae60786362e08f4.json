{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Gizmo } from '@components/gizmo';\nimport { useGLTF } from '@react-three/drei';\nimport { Robot } from '@types';\nimport Mesh from \"@components/mesh/Mesh\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RobotArm = ({\n  data,\n  onUpdate\n}) => {\n  _s();\n  const {\n    nodes\n  } = useGLTF('/robot.glb');\n  const node = Robot.NodeName;\n  const handleGizmoUpdate = (nodeName, newPosition) => {\n    onUpdate({\n      nodes: {\n        ...data.nodes,\n        [nodeName]: {\n          ...data.nodes[nodeName],\n          position: newPosition\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(Gizmo, {\n      scale: 5,\n      disableTranslation: true,\n      activeAxes: [true, false, true],\n      userData: [node.mainColumn],\n      onUpdate: newPosition => handleGizmoUpdate(node.mainColumn, newPosition),\n      children: [/*#__PURE__*/_jsxDEV(Mesh, {\n        node: nodes[node.mainColumn],\n        data: data.nodes[node.mainColumn]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n        activeAxes: [false, true, false],\n        translationLimits: [undefined, [-1, .8], undefined],\n        disableRotation: true,\n        anchor: [-0.8, 1.5, 0],\n        scale: 1,\n        userData: [node.upperArm],\n        onUpdate: newPosition => handleGizmoUpdate(node.upperArm, newPosition),\n        children: [/*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.upperArm],\n          data: data.nodes[node.upperArm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.wristExtension],\n          data: data.nodes[node.wristExtension]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.hand],\n          data: data.nodes[node.hand]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n          activeAxes: [false, false, true],\n          translationLimits: [undefined, undefined, [0, 0.4]],\n          anchor: [2, 0, 2],\n          scale: 0.75,\n          userData: [node.gripper],\n          onUpdate: newPosition => handleGizmoUpdate(node.gripper, newPosition),\n          children: /*#__PURE__*/_jsxDEV(Mesh, {\n            node: nodes[node.gripper],\n            data: data.nodes[node.gripper]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(RobotArm, \"32KrL5kPiaeJAX40F9P63Xol6XY=\", false, function () {\n  return [useGLTF];\n});\n_c = RobotArm;\nuseGLTF.preload('/robot.glb');\nvar _c;\n$RefreshReg$(_c, \"RobotArm\");","map":{"version":3,"names":["React","Gizmo","useGLTF","Robot","Mesh","jsxDEV","_jsxDEV","RobotArm","data","onUpdate","_s","nodes","node","NodeName","handleGizmoUpdate","nodeName","newPosition","position","children","scale","disableTranslation","activeAxes","userData","mainColumn","fileName","_jsxFileName","lineNumber","columnNumber","translationLimits","undefined","disableRotation","anchor","upperArm","wristExtension","hand","gripper","_c","preload","$RefreshReg$"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx"],"sourcesContent":["import React from 'react'\nimport {Gizmo} from '@components/gizmo'\nimport {useGLTF} from '@react-three/drei'\nimport {Robot} from '@types'\nimport Mesh from \"@components/mesh/Mesh\"\ninterface RobotProps {\n    data: Robot.RobotNodes\n    onUpdate: (newData: Partial<Robot.RobotNodes>) => void\n}\nexport const RobotArm = ({data, onUpdate}: RobotProps) => {\n    const {nodes} = useGLTF('/robot.glb') as unknown as Robot.DreiGLTF\n    const node = Robot.NodeName\n    const handleGizmoUpdate = (nodeName: Robot.NodeName, newPosition: [number, number, number]) => {\n        onUpdate({\n            nodes: {\n                ...data.nodes,\n                [nodeName]: {\n                    ...data.nodes[nodeName],\n                    position: newPosition\n                }\n            }\n        })\n    }\n    return (\n        <group>\n            <Gizmo scale={5}\n                   disableTranslation\n                   activeAxes={[true, false, true]}\n                   userData={[node.mainColumn]}\n                   onUpdate={(newPosition) => handleGizmoUpdate(node.mainColumn, newPosition)}>\n                <Mesh node={nodes[node.mainColumn]} data={data.nodes[node.mainColumn]}/>\n                <Gizmo activeAxes={[false, true, false]}\n                       translationLimits={[undefined, [-1, .8], undefined]}\n                       disableRotation\n                       anchor={[-0.8, 1.5, 0]}\n                       scale={1}\n                       userData={[node.upperArm]}\n                       onUpdate={(newPosition) => handleGizmoUpdate(node.upperArm, newPosition)}>\n                    <Mesh node={nodes[node.upperArm]} data={data.nodes[node.upperArm]}/>\n                    <Mesh node={nodes[node.wristExtension]} data={data.nodes[node.wristExtension]}/>\n                    <Mesh node={nodes[node.hand]} data={data.nodes[node.hand]}/>\n                    <Gizmo activeAxes={[false, false, true]}\n                           translationLimits={[undefined, undefined, [0, 0.4]]}\n                           anchor={[2, 0, 2]}\n                           scale={0.75}\n                           userData={[node.gripper]}\n                           onUpdate={(newPosition) => handleGizmoUpdate(node.gripper, newPosition)}>\n                        <Mesh node={nodes[node.gripper]} data={data.nodes[node.gripper]}/>\n                    </Gizmo>\n                </Gizmo>\n            </Gizmo>\n        </group>\n    )\n}\nuseGLTF.preload('/robot.glb')"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}