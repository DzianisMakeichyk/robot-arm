{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Gizmo } from '@components/gizmo';\nimport { useGLTF } from '@react-three/drei';\nimport { Robot } from '@types';\nimport Mesh from \"@components/mesh/Mesh\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RobotArm = ({\n  data,\n  onUpdate\n}) => {\n  _s();\n  const {\n    nodes\n  } = useGLTF('/robot.glb');\n  const node = Robot.NodeName;\n  const handleGizmoUpdate = (nodeName, newRotation) => {\n    console.log(`RobotArm: Updating ${nodeName} rotation:`, newRotation);\n    const newData = {\n      nodes: {\n        ...data.nodes,\n        [nodeName]: {\n          ...data.nodes[nodeName],\n          rotation: newRotation\n        }\n      }\n    };\n    console.log('RobotArm: Sending update:', newData);\n    onUpdate(newData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(Gizmo, {\n      scale: 5,\n      disableTranslation: true,\n      activeAxes: [true, false, true],\n      userData: [node.mainColumn],\n      matrix: undefined,\n      onUpdate: rotation => {\n        console.log('Main column rotation:', rotation);\n        handleGizmoUpdate(node.mainColumn, rotation);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Mesh, {\n        node: nodes[node.mainColumn],\n        data: data.nodes[node.mainColumn]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n        activeAxes: [false, true, false],\n        translationLimits: [undefined, [-1, .8], undefined],\n        disableRotation: false,\n        anchor: [-0.8, 1.5, 0],\n        scale: 1,\n        userData: [node.upperArm],\n        onUpdate: rotation => {\n          console.log('Upper arm rotation:', rotation);\n          handleGizmoUpdate(node.upperArm, rotation);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.upperArm],\n          data: data.nodes[node.upperArm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.wristExtension],\n          data: data.nodes[node.wristExtension]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.hand],\n          data: data.nodes[node.hand]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n          activeAxes: [false, false, true],\n          translationLimits: [undefined, undefined, [0, 0.4]],\n          anchor: [2, 0, 2],\n          scale: 0.75,\n          userData: [node.gripper],\n          onUpdate: rotation => {\n            console.log('Gripper rotation:', rotation);\n            handleGizmoUpdate(node.gripper, rotation);\n          },\n          children: /*#__PURE__*/_jsxDEV(Mesh, {\n            node: nodes[node.gripper],\n            data: data.nodes[node.gripper]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(RobotArm, \"32KrL5kPiaeJAX40F9P63Xol6XY=\", false, function () {\n  return [useGLTF];\n});\n_c = RobotArm;\nuseGLTF.preload('/robot.glb');\nvar _c;\n$RefreshReg$(_c, \"RobotArm\");","map":{"version":3,"names":["React","Gizmo","useGLTF","Robot","Mesh","jsxDEV","_jsxDEV","RobotArm","data","onUpdate","_s","nodes","node","NodeName","handleGizmoUpdate","nodeName","newRotation","console","log","newData","rotation","children","scale","disableTranslation","activeAxes","userData","mainColumn","matrix","undefined","fileName","_jsxFileName","lineNumber","columnNumber","translationLimits","disableRotation","anchor","upperArm","wristExtension","hand","gripper","_c","preload","$RefreshReg$"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx"],"sourcesContent":["import React from 'react'\nimport {Gizmo} from '@components/gizmo'\nimport {useGLTF} from '@react-three/drei'\nimport {Robot} from '@types'\nimport Mesh from \"@components/mesh/Mesh\"\n\ninterface RobotProps {\n    data: Robot.RobotNodes;\n    onUpdate: (newData: Partial<Robot.RobotNodes>) => void;\n}\n\nexport const RobotArm = ({data, onUpdate}: RobotProps) => {\n    const {nodes} = useGLTF('/robot.glb') as unknown as Robot.DreiGLTF;\n    const node = Robot.NodeName;\n\n    const handleGizmoUpdate = (nodeName: Robot.NodeName, newRotation: [number, number, number]) => {\n        console.log(`RobotArm: Updating ${nodeName} rotation:`, newRotation);\n        \n        const newData: Partial<Robot.RobotNodes> = {\n            nodes: {\n                ...data.nodes,\n                [nodeName]: {\n                    ...data.nodes[nodeName],\n                    rotation: newRotation\n                }\n            }\n        };\n\n        console.log('RobotArm: Sending update:', newData);\n        onUpdate(newData);\n    };\n\n    return (\n        <group>\n            <Gizmo \n                scale={5}\n                disableTranslation\n                activeAxes={[true, false, true]}\n                userData={[node.mainColumn]}\n                matrix={undefined}\n                onUpdate={(rotation) => {\n                    console.log('Main column rotation:', rotation);\n                    handleGizmoUpdate(node.mainColumn, rotation);\n                }}>\n                <Mesh node={nodes[node.mainColumn]} data={data.nodes[node.mainColumn]}/>\n\n                <Gizmo \n                    activeAxes={[false, true, false]}\n                    translationLimits={[undefined, [-1, .8], undefined]}\n                    disableRotation={false}\n                    anchor={[-0.8, 1.5, 0]}\n                    scale={1}\n                    userData={[node.upperArm]}\n                    onUpdate={(rotation) => {\n                        console.log('Upper arm rotation:', rotation);\n                        handleGizmoUpdate(node.upperArm, rotation);\n                    }}>\n                    <Mesh node={nodes[node.upperArm]} data={data.nodes[node.upperArm]}/>\n                    <Mesh node={nodes[node.wristExtension]} data={data.nodes[node.wristExtension]}/>\n                    <Mesh node={nodes[node.hand]} data={data.nodes[node.hand]}/>\n\n                    <Gizmo \n                        activeAxes={[false, false, true]}\n                        translationLimits={[undefined, undefined, [0, 0.4]]}\n                        anchor={[2, 0, 2]}\n                        scale={0.75}\n                        userData={[node.gripper]}\n                        onUpdate={(rotation) => {\n                            console.log('Gripper rotation:', rotation);\n                            handleGizmoUpdate(node.gripper, rotation);\n                        }}>\n                        <Mesh node={nodes[node.gripper]} data={data.nodes[node.gripper]}/>\n                    </Gizmo>\n                </Gizmo>\n            </Gizmo>\n        </group>\n    );\n};\n\nuseGLTF.preload('/robot.glb');"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}