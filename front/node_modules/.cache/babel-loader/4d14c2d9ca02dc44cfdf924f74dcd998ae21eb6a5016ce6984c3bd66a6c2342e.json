{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/gizmo/index.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { Translate } from './Translate';\nimport { Rotate } from './Rotate';\nimport { context } from './context';\nimport { Vector3, Matrix4, Box3, Euler } from 'three';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst localMatrix = new Matrix4();\nconst localMatrix0 = new Matrix4();\nconst localMatrix0Inv = new Matrix4();\nconst localDeltaMatrix = new Matrix4();\nconst worldMatrix0 = new Matrix4();\nconst worldMatrix = new Matrix4();\nconst parentMatrix = new Matrix4();\nconst parentMatrixInv = new Matrix4();\nexport const Gizmo = ({\n  scale = 1,\n  matrix,\n  anchor,\n  activeAxes = [true, true, true],\n  disableTranslation = false,\n  disableRotation = false,\n  translationLimits,\n  rotationLimits,\n  userData,\n  onUpdate,\n  children\n}) => {\n  const invalidate = useThree(state => state.invalidate);\n  const parentGroup = useRef(null);\n  const matrixGroup = useRef(null);\n  const gizmoGroup = useRef(null);\n  const childrenGroup = useRef(null);\n  useEffect(() => {\n    if (anchor) {\n      const targetGroup = childrenGroup.current;\n      const boundingBox = new Box3();\n      if (targetGroup) {\n        targetGroup.updateWorldMatrix(true, true);\n        parentMatrixInv.copy(targetGroup.matrixWorld).invert();\n        boundingBox.makeEmpty();\n        targetGroup.traverse(object => {\n          if (!object.geometry) return;\n          if (!object.geometry.boundingBox) object.geometry.computeBoundingBox();\n          localMatrix.copy(object.matrixWorld).premultiply(parentMatrixInv);\n          const objectBoundingBox = new Box3();\n          objectBoundingBox.copy(object.geometry.boundingBox);\n          objectBoundingBox.applyMatrix4(localMatrix);\n          boundingBox.union(objectBoundingBox);\n        });\n        const vectorCenter = new Vector3();\n        const vectorSize = new Vector3();\n        const anchorOffsetVector = new Vector3();\n        const positionVector = new Vector3();\n        vectorCenter.copy(boundingBox.max).add(boundingBox.min).multiplyScalar(0.5);\n        vectorSize.copy(boundingBox.max).sub(boundingBox.min).multiplyScalar(0.5);\n        anchorOffsetVector.copy(vectorSize).multiply(new Vector3(...anchor)).add(vectorCenter);\n        positionVector.set(0, 0, 0).add(anchorOffsetVector);\n        gizmoGroup.current.position.copy(positionVector);\n        invalidate();\n      }\n    }\n  }, [anchor, invalidate]);\n  const configuration = {\n    onDragStart: () => {\n      console.log('Drag start');\n      localMatrix0.copy(matrixGroup.current.matrix);\n      worldMatrix0.copy(matrixGroup.current.matrixWorld);\n      invalidate();\n    },\n    onDrag: worldDeltaMatrix => {\n      console.log('Dragging');\n      parentMatrix.copy(parentGroup.current.matrixWorld);\n      parentMatrixInv.copy(parentMatrix).invert();\n      worldMatrix.copy(worldMatrix0).premultiply(worldDeltaMatrix);\n      localMatrix.copy(worldMatrix).premultiply(parentMatrixInv);\n      localMatrix0Inv.copy(localMatrix0).invert();\n      localDeltaMatrix.copy(localMatrix).multiply(localMatrix0Inv);\n      matrixGroup.current.matrix.copy(localMatrix);\n\n      // Extract rotation from matrix\n\n      const rotation = new Euler().setFromRotationMatrix(localMatrix);\n      const rotationArray = [rotation.x, rotation.y, rotation.z];\n      console.log('Updating rotation:', rotationArray);\n      if (onUpdate) {\n        onUpdate(rotationArray);\n      }\n      invalidate();\n    },\n    onDragEnd: () => {\n      console.log('Drag end');\n      invalidate();\n    },\n    translationLimits,\n    rotationLimits,\n    scale,\n    userData\n  };\n  return /*#__PURE__*/_jsxDEV(context.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      ref: parentGroup,\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        ref: matrixGroup,\n        matrix: matrix,\n        matrixAutoUpdate: false,\n        children: [/*#__PURE__*/_jsxDEV(\"group\", {\n          ref: gizmoGroup,\n          children: [!disableTranslation && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [activeAxes[0] && /*#__PURE__*/_jsxDEV(Translate, {\n              axis: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 51\n            }, this), activeAxes[1] && /*#__PURE__*/_jsxDEV(Translate, {\n              axis: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 51\n            }, this), activeAxes[2] && /*#__PURE__*/_jsxDEV(Translate, {\n              axis: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true), !disableRotation && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [activeAxes[0] && activeAxes[1] && /*#__PURE__*/_jsxDEV(Rotate, {\n              axis: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 68\n            }, this), activeAxes[0] && activeAxes[2] && /*#__PURE__*/_jsxDEV(Rotate, {\n              axis: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 68\n            }, this), activeAxes[2] && activeAxes[1] && /*#__PURE__*/_jsxDEV(Rotate, {\n              axis: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n          ref: childrenGroup,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["React","useEffect","useRef","useThree","Translate","Rotate","context","Vector3","Matrix4","Box3","Euler","jsxDEV","_jsxDEV","Fragment","_Fragment","localMatrix","localMatrix0","localMatrix0Inv","localDeltaMatrix","worldMatrix0","worldMatrix","parentMatrix","parentMatrixInv","Gizmo","scale","matrix","anchor","activeAxes","disableTranslation","disableRotation","translationLimits","rotationLimits","userData","onUpdate","children","invalidate","state","parentGroup","matrixGroup","gizmoGroup","childrenGroup","targetGroup","current","boundingBox","updateWorldMatrix","copy","matrixWorld","invert","makeEmpty","traverse","object","geometry","computeBoundingBox","premultiply","objectBoundingBox","applyMatrix4","union","vectorCenter","vectorSize","anchorOffsetVector","positionVector","max","add","min","multiplyScalar","sub","multiply","set","position","configuration","onDragStart","console","log","onDrag","worldDeltaMatrix","rotation","setFromRotationMatrix","rotationArray","x","y","z","onDragEnd","Provider","value","ref","matrixAutoUpdate","axis","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/gizmo/index.tsx"],"sourcesContent":["import React, {useEffect, useRef} from 'react'\nimport {useThree} from '@react-three/fiber'\nimport {Translate} from './Translate'\nimport {Rotate} from './Rotate'\nimport {context} from './context'\nimport {Vector3, Matrix4, Box3, Group, Euler} from 'three'\nimport {Robot} from '@types'\n\nconst localMatrix = new Matrix4()\nconst localMatrix0 = new Matrix4()\nconst localMatrix0Inv = new Matrix4()\nconst localDeltaMatrix = new Matrix4()\nconst worldMatrix0 = new Matrix4()\nconst worldMatrix = new Matrix4()\nconst parentMatrix = new Matrix4()\nconst parentMatrixInv = new Matrix4()\n\nexport const Gizmo = ({\n    scale = 1,\n    matrix,\n    anchor,\n    activeAxes = [true, true, true],\n    disableTranslation = false,\n    disableRotation = false,\n    translationLimits,\n    rotationLimits,\n    userData,\n    onUpdate,\n    children,\n}: Robot.GizmoProperties) => {\n    const invalidate = useThree((state) => state.invalidate)\n    const parentGroup = useRef<Group>(null!)\n    const matrixGroup = useRef<Group>(null!)\n    const gizmoGroup = useRef<Group>(null!)\n    const childrenGroup = useRef<Group>(null!)\n\n    useEffect(() => {\n        if (anchor) {\n            const targetGroup = childrenGroup.current\n            const boundingBox = new Box3()\n\n            if (targetGroup) {\n                targetGroup.updateWorldMatrix(true, true)\n                parentMatrixInv.copy(targetGroup.matrixWorld).invert()\n                boundingBox.makeEmpty()\n\n                targetGroup.traverse((object: any) => {\n                    if (!object.geometry) return\n                    if (!object.geometry.boundingBox) object.geometry.computeBoundingBox()\n\n                    localMatrix.copy(object.matrixWorld).premultiply(parentMatrixInv)\n                    const objectBoundingBox = new Box3()\n                    objectBoundingBox.copy(object.geometry.boundingBox)\n                    objectBoundingBox.applyMatrix4(localMatrix)\n                    boundingBox.union(objectBoundingBox)\n                })\n\n                const vectorCenter = new Vector3()\n                const vectorSize = new Vector3()\n                const anchorOffsetVector = new Vector3()\n                const positionVector = new Vector3()\n\n                vectorCenter.copy(boundingBox.max).add(boundingBox.min).multiplyScalar(0.5)\n                vectorSize.copy(boundingBox.max).sub(boundingBox.min).multiplyScalar(0.5)\n                anchorOffsetVector.copy(vectorSize).multiply(new Vector3(...anchor)).add(vectorCenter)\n                positionVector.set(0, 0, 0).add(anchorOffsetVector)\n                gizmoGroup.current.position.copy(positionVector)\n\n                invalidate()\n            }\n        }\n    }, [anchor, invalidate])\n\n    const configuration = {\n        onDragStart: () => {\n            console.log('Drag start');\n            localMatrix0.copy(matrixGroup.current.matrix)\n            worldMatrix0.copy(matrixGroup.current.matrixWorld)\n            invalidate()\n        },\n\n        onDrag: (worldDeltaMatrix: Matrix4) => {\n            console.log('Dragging');\n            parentMatrix.copy(parentGroup.current.matrixWorld)\n            parentMatrixInv.copy(parentMatrix).invert()\n            worldMatrix.copy(worldMatrix0).premultiply(worldDeltaMatrix)\n            localMatrix.copy(worldMatrix).premultiply(parentMatrixInv)\n            localMatrix0Inv.copy(localMatrix0).invert()\n            localDeltaMatrix.copy(localMatrix).multiply(localMatrix0Inv)\n            matrixGroup.current.matrix.copy(localMatrix)\n\n            // Extract rotation from matrix\n            \n            const rotation = new Euler().setFromRotationMatrix(localMatrix);\n            const rotationArray: [number, number, number] = [rotation.x, rotation.y, rotation.z];\n\n            console.log('Updating rotation:', rotationArray);\n            if (onUpdate) {\n                onUpdate(rotationArray);\n            }\n\n            invalidate()\n        },\n\n        onDragEnd: () => {\n            console.log('Drag end');\n            invalidate()\n        },\n\n        translationLimits,\n        rotationLimits,\n        scale,\n        userData\n    }\n\n    return (\n        <context.Provider value={configuration}>\n            <group ref={parentGroup}>\n                <group ref={matrixGroup} matrix={matrix} matrixAutoUpdate={false}>\n                    <group ref={gizmoGroup}>\n                        {!disableTranslation && (\n                            <>\n                                {activeAxes[0] && <Translate axis={0}/>}\n                                {activeAxes[1] && <Translate axis={1}/>}\n                                {activeAxes[2] && <Translate axis={2}/>}\n                            </>\n                        )}\n                        {!disableRotation && (\n                            <>\n                                {activeAxes[0] && activeAxes[1] && <Rotate axis={2}/>}\n                                {activeAxes[0] && activeAxes[2] && <Rotate axis={1}/>}\n                                {activeAxes[2] && activeAxes[1] && <Rotate axis={0}/>}\n                            </>\n                        )}\n                    </group>\n                    <group ref={childrenGroup}>{children}</group>\n                </group>\n            </group>\n        </context.Provider>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}