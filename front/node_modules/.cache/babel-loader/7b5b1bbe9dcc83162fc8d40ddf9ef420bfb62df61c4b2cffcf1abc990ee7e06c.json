{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera } from '@react-three/drei';\nimport { Shadows, Ground } from '@components/stage';\nimport { io } from 'socket.io-client';\nimport { RobotArm } from \"@components/model/RobotArm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [robotData, setRobotData] = useState();\n  const [socket, setSocket] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Create socket with WebSocket-only configuration\n    const newSocket = io('ws://localhost:4000', {\n      transports: ['websocket'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    newSocket.on('connect', () => {\n      console.log('WebSocket connected');\n      setError('');\n      newSocket.emit('state:get');\n    });\n    newSocket.on('connect_error', () => {\n      setError('Unable to connect to server. Please ensure the server is running.');\n    });\n    newSocket.on('state', data => {\n      setRobotData(data);\n    });\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n  const updateRobotData = useCallback(newData => {\n    if (!(socket !== null && socket !== void 0 && socket.connected)) return;\n    setRobotData(prevData => {\n      if (prevData) {\n        console.log('Updating robot data:', newData);\n        const updatedData = {\n          ...prevData,\n          ...newData\n        };\n        socket.emit(\"state:update\", updatedData);\n        return updatedData;\n      }\n      return prevData;\n    });\n  }, [socket]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#ff4444',\n        color: 'white',\n        padding: '20px',\n        borderRadius: '5px',\n        textAlign: 'center'\n      },\n      children: [error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          marginTop: '10px',\n          padding: '5px 15px',\n          backgroundColor: 'white',\n          border: 'none',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: robotData && /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        fov: 40,\n        position: [10, 8, 25]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RobotArm, {\n        data: robotData,\n        onUpdate: updateRobotData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Shadows, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Environment, {\n        preset: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        makeDefault: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GizmoHelper, {\n        alignment: \"bottom-right\",\n        margin: [100, 100],\n        children: /*#__PURE__*/_jsxDEV(GizmoViewport, {\n          labelColor: \"white\",\n          axisHeadScale: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"/NgHdQRWwJn51D6OU6qOoWQdpiw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Canvas","GizmoHelper","GizmoViewport","OrbitControls","Environment","Stats","PerspectiveCamera","Shadows","Ground","io","RobotArm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","robotData","setRobotData","socket","setSocket","error","setError","newSocket","transports","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","emit","data","close","updateRobotData","newData","connected","prevData","updatedData","style","position","top","left","transform","backgroundColor","color","padding","borderRadius","textAlign","children","onClick","window","location","reload","marginTop","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","makeDefault","fov","onUpdate","preset","alignment","margin","labelColor","axisHeadScale","_c","$RefreshReg$"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera } from '@react-three/drei'\nimport { Shadows, Ground } from '@components/stage'\nimport { io } from 'socket.io-client'\nimport { Robot } from '@types'\nimport { RobotArm } from \"@components/model/RobotArm\"\n\nexport default function App() {\n    const [robotData, setRobotData] = useState<Robot.RobotNodes>()\n    const [socket, setSocket] = useState<any>(null);\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        // Create socket with WebSocket-only configuration\n        const newSocket = io('ws://localhost:4000', {\n            transports: ['websocket'],\n            reconnection: true,\n            reconnectionAttempts: 5,\n            reconnectionDelay: 1000\n        });\n\n        newSocket.on('connect', () => {\n            console.log('WebSocket connected');\n            setError('');\n            newSocket.emit('state:get');\n        });\n\n        newSocket.on('connect_error', () => {\n            setError('Unable to connect to server. Please ensure the server is running.');\n        });\n\n        newSocket.on('state', (data: Robot.RobotNodes) => {\n            setRobotData(data);\n        });\n\n        setSocket(newSocket);\n\n        return () => {\n            newSocket.close();\n        };\n    }, []);\n\n    const updateRobotData = useCallback((newData: Partial<Robot.RobotNodes>) => {\n        if (!socket?.connected) return;\n        \n        setRobotData(prevData => {\n            if (prevData) {\n                console.log('Updating robot data:', newData);\n                const updatedData = {...prevData, ...newData};\n                socket.emit(\"state:update\", updatedData);\n                return updatedData;\n            }\n            return prevData;\n        });\n    }, [socket]);\n\n    if (error) {\n        return (\n            <div style={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: '#ff4444',\n                color: 'white',\n                padding: '20px',\n                borderRadius: '5px',\n                textAlign: 'center'\n            }}>\n                {error}\n                <button \n                    onClick={() => window.location.reload()}\n                    style={{\n                        marginTop: '10px',\n                        padding: '5px 15px',\n                        backgroundColor: 'white',\n                        border: 'none',\n                        borderRadius: '3px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Retry\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            {robotData && (\n                <Canvas>\n                    <PerspectiveCamera makeDefault fov={40} position={[10, 8, 25]}/>\n                    <RobotArm data={robotData} onUpdate={updateRobotData}/>\n                    <Shadows/>\n                    <Ground/>\n                    <Environment preset=\"city\"/>\n                    <OrbitControls makeDefault/>\n                    <GizmoHelper alignment=\"bottom-right\" margin={[100, 100]}>\n                        <GizmoViewport labelColor=\"white\" axisHeadScale={1}/>\n                    </GizmoHelper>\n                    <Stats/>\n                </Canvas>\n            )}\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}