{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx\";\nimport { Gizmo } from '@components/gizmo';\nimport { useGLTF } from '@react-three/drei';\nimport { Robot } from '@types';\nimport Mesh from \"@components/mesh/Mesh\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RobotArm = ({\n  data,\n  onUpdate\n}) => {\n  const {\n    nodes\n  } = useGLTF('/robot.glb');\n  const node = Robot.NodeName;\n  const handleGizmoUpdate = (nodeName, newMatrix) => {\n    console.log(`Updating ${nodeName}:`, newMatrix);\n    const newData = {\n      nodes: {\n        ...data.nodes,\n        [nodeName]: {\n          ...data.nodes[nodeName],\n          position: data.nodes[nodeName].position,\n          scale: data.nodes[nodeName].scale,\n          rotation: data.nodes[nodeName].rotation,\n          _updated: true\n        }\n      }\n    };\n\n    // Preserve initial rotations for hand and gripper\n    if (newData.nodes) {\n      if (newData.nodes.hand) {\n        newData.nodes.hand.rotation = data.nodes.hand.rotation;\n      }\n      if (newData.nodes.gripper && nodeName !== node.gripper) {\n        newData.nodes.gripper.rotation = data.nodes.gripper.rotation;\n      }\n    }\n\n    // Reset _updated flag for other nodes\n    Object.keys(newData.nodes || {}).forEach(key => {\n      // @ts-ignore\n      if (key !== nodeName && newData.nodes && newData.nodes[key]) {\n        // @ts-ignore\n        newData.nodes[key]._updated = false;\n      }\n    });\n    console.log('Sending update:', newData);\n    onUpdate(newData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    children: /*#__PURE__*/_jsxDEV(Gizmo, {\n      scale: 5,\n      disableTranslation: true,\n      activeAxes: [true, false, true],\n      userData: [node.mainColumn],\n      onUpdate: newMatrix => handleGizmoUpdate(node.mainColumn, newMatrix),\n      children: [/*#__PURE__*/_jsxDEV(Mesh, {\n        node: nodes[node.mainColumn],\n        data: data.nodes[node.mainColumn]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n        activeAxes: [false, true, false],\n        translationLimits: [undefined, [-1, .8], undefined],\n        disableRotation: true,\n        anchor: [-0.8, 1.5, 0],\n        scale: 1,\n        userData: [node.upperArm],\n        onUpdate: newMatrix => handleGizmoUpdate(node.upperArm, newMatrix),\n        children: [/*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.upperArm],\n          data: data.nodes[node.upperArm]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.wristExtension],\n          data: data.nodes[node.wristExtension]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Mesh, {\n          node: nodes[node.hand],\n          data: data.nodes[node.hand]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Gizmo, {\n          activeAxes: [false, false, true],\n          translationLimits: [undefined, undefined, [0, 0.4]],\n          anchor: [2, 0, 2],\n          scale: 0.75,\n          userData: [node.gripper],\n          onUpdate: newMatrix => handleGizmoUpdate(node.gripper, newMatrix),\n          children: /*#__PURE__*/_jsxDEV(Mesh, {\n            node: nodes[node.gripper],\n            data: data.nodes[node.gripper]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\nuseGLTF.preload('/robot.glb');","map":{"version":3,"names":["Gizmo","useGLTF","Robot","Mesh","jsxDEV","_jsxDEV","RobotArm","data","onUpdate","nodes","node","NodeName","handleGizmoUpdate","nodeName","newMatrix","console","log","newData","position","scale","rotation","_updated","hand","gripper","Object","keys","forEach","key","children","disableTranslation","activeAxes","userData","mainColumn","fileName","_jsxFileName","lineNumber","columnNumber","translationLimits","undefined","disableRotation","anchor","upperArm","wristExtension","preload"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/components/model/RobotArm.tsx"],"sourcesContent":["import {Gizmo} from '@components/gizmo'\nimport {useGLTF} from '@react-three/drei'\nimport {Robot} from '@types'\nimport Mesh from \"@components/mesh/Mesh\"\n\ninterface RobotProps {\n    data: Robot.RobotNodes;\n    onUpdate: (newData: Partial<Robot.RobotNodes>) => void;\n}\n\nexport const RobotArm = ({data, onUpdate}: RobotProps) => {\n    const {nodes} = useGLTF('/robot.glb') as unknown as Robot.DreiGLTF;\n    const node = Robot.NodeName;\n\n    const handleGizmoUpdate = (nodeName: Robot.NodeName, newMatrix: [number, number, number]) => {\n        console.log(`Updating ${nodeName}:`, newMatrix);\n        \n        const newData: Partial<Robot.RobotNodes> = {\n            nodes: {\n                ...data.nodes,\n                [nodeName]: {\n                    ...data.nodes[nodeName],\n                    position: data.nodes[nodeName].position,\n                    scale: data.nodes[nodeName].scale,\n                    rotation: data.nodes[nodeName].rotation,\n                    _updated: true\n                }\n            }\n        };\n    \n        // Preserve initial rotations for hand and gripper\n        if (newData.nodes) {\n            if (newData.nodes.hand) {\n                newData.nodes.hand.rotation = data.nodes.hand.rotation;\n            }\n            if (newData.nodes.gripper && nodeName !== node.gripper) {\n                newData.nodes.gripper.rotation = data.nodes.gripper.rotation;\n            }\n        }\n    \n        // Reset _updated flag for other nodes\n        Object.keys(newData.nodes || {}).forEach((key) => {\n            // @ts-ignore\n            if (key !== nodeName && newData.nodes && newData.nodes[key]) {\n                // @ts-ignore\n                newData.nodes[key]._updated = false;\n            }\n        });\n    \n        console.log('Sending update:', newData);\n        onUpdate(newData);\n    };\n\n    return (\n        <group>\n            <Gizmo scale={5}\n                   disableTranslation\n                   activeAxes={[true, false, true]}\n                   userData={[node.mainColumn]}\n                   onUpdate={(newMatrix) => handleGizmoUpdate(node.mainColumn, newMatrix)}>\n                <Mesh node={nodes[node.mainColumn]} data={data.nodes[node.mainColumn]}/>\n\n                <Gizmo activeAxes={[false, true, false]}\n                       translationLimits={[undefined, [-1, .8], undefined]}\n                       disableRotation\n                       anchor={[-0.8, 1.5, 0]}\n                       scale={1}\n                       userData={[node.upperArm]}\n                       onUpdate={(newMatrix) => handleGizmoUpdate(node.upperArm, newMatrix)}>\n\n                    <Mesh node={nodes[node.upperArm]} data={data.nodes[node.upperArm]}/>\n                    <Mesh node={nodes[node.wristExtension]} data={data.nodes[node.wristExtension]}/>\n                    <Mesh node={nodes[node.hand]} data={data.nodes[node.hand]}/>\n\n                    <Gizmo activeAxes={[false, false, true]}\n                           translationLimits={[undefined, undefined, [0, 0.4]]}\n                           anchor={[2, 0, 2]}\n                           scale={0.75}\n                           userData={[node.gripper]}\n                           onUpdate={(newMatrix) => handleGizmoUpdate(node.gripper, newMatrix)}>\n                        <Mesh node={nodes[node.gripper]} data={data.nodes[node.gripper]}/>\n                    </Gizmo>\n                </Gizmo>\n            </Gizmo>\n        </group>\n    );\n};\n\nuseGLTF.preload('/robot.glb');"],"mappings":";AAAA,SAAQA,KAAK,QAAO,mBAAmB;AACvC,SAAQC,OAAO,QAAO,mBAAmB;AACzC,SAAQC,KAAK,QAAO,QAAQ;AAC5B,OAAOC,IAAI,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOxC,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAACC,IAAI;EAAEC;AAAoB,CAAC,KAAK;EACtD,MAAM;IAACC;EAAK,CAAC,GAAGR,OAAO,CAAC,YAAY,CAA8B;EAClE,MAAMS,IAAI,GAAGR,KAAK,CAACS,QAAQ;EAE3B,MAAMC,iBAAiB,GAAGA,CAACC,QAAwB,EAAEC,SAAmC,KAAK;IACzFC,OAAO,CAACC,GAAG,CAAC,YAAYH,QAAQ,GAAG,EAAEC,SAAS,CAAC;IAE/C,MAAMG,OAAkC,GAAG;MACvCR,KAAK,EAAE;QACH,GAAGF,IAAI,CAACE,KAAK;QACb,CAACI,QAAQ,GAAG;UACR,GAAGN,IAAI,CAACE,KAAK,CAACI,QAAQ,CAAC;UACvBK,QAAQ,EAAEX,IAAI,CAACE,KAAK,CAACI,QAAQ,CAAC,CAACK,QAAQ;UACvCC,KAAK,EAAEZ,IAAI,CAACE,KAAK,CAACI,QAAQ,CAAC,CAACM,KAAK;UACjCC,QAAQ,EAAEb,IAAI,CAACE,KAAK,CAACI,QAAQ,CAAC,CAACO,QAAQ;UACvCC,QAAQ,EAAE;QACd;MACJ;IACJ,CAAC;;IAED;IACA,IAAIJ,OAAO,CAACR,KAAK,EAAE;MACf,IAAIQ,OAAO,CAACR,KAAK,CAACa,IAAI,EAAE;QACpBL,OAAO,CAACR,KAAK,CAACa,IAAI,CAACF,QAAQ,GAAGb,IAAI,CAACE,KAAK,CAACa,IAAI,CAACF,QAAQ;MAC1D;MACA,IAAIH,OAAO,CAACR,KAAK,CAACc,OAAO,IAAIV,QAAQ,KAAKH,IAAI,CAACa,OAAO,EAAE;QACpDN,OAAO,CAACR,KAAK,CAACc,OAAO,CAACH,QAAQ,GAAGb,IAAI,CAACE,KAAK,CAACc,OAAO,CAACH,QAAQ;MAChE;IACJ;;IAEA;IACAI,MAAM,CAACC,IAAI,CAACR,OAAO,CAACR,KAAK,IAAI,CAAC,CAAC,CAAC,CAACiB,OAAO,CAAEC,GAAG,IAAK;MAC9C;MACA,IAAIA,GAAG,KAAKd,QAAQ,IAAII,OAAO,CAACR,KAAK,IAAIQ,OAAO,CAACR,KAAK,CAACkB,GAAG,CAAC,EAAE;QACzD;QACAV,OAAO,CAACR,KAAK,CAACkB,GAAG,CAAC,CAACN,QAAQ,GAAG,KAAK;MACvC;IACJ,CAAC,CAAC;IAEFN,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,OAAO,CAAC;IACvCT,QAAQ,CAACS,OAAO,CAAC;EACrB,CAAC;EAED,oBACIZ,OAAA;IAAAuB,QAAA,eACIvB,OAAA,CAACL,KAAK;MAACmB,KAAK,EAAE,CAAE;MACTU,kBAAkB;MAClBC,UAAU,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAE;MAChCC,QAAQ,EAAE,CAACrB,IAAI,CAACsB,UAAU,CAAE;MAC5BxB,QAAQ,EAAGM,SAAS,IAAKF,iBAAiB,CAACF,IAAI,CAACsB,UAAU,EAAElB,SAAS,CAAE;MAAAc,QAAA,gBAC1EvB,OAAA,CAACF,IAAI;QAACO,IAAI,EAAED,KAAK,CAACC,IAAI,CAACsB,UAAU,CAAE;QAACzB,IAAI,EAAEA,IAAI,CAACE,KAAK,CAACC,IAAI,CAACsB,UAAU;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAExE/B,OAAA,CAACL,KAAK;QAAC8B,UAAU,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,CAAE;QACjCO,iBAAiB,EAAE,CAACC,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAEA,SAAS,CAAE;QACpDC,eAAe;QACfC,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAE;QACvBrB,KAAK,EAAE,CAAE;QACTY,QAAQ,EAAE,CAACrB,IAAI,CAAC+B,QAAQ,CAAE;QAC1BjC,QAAQ,EAAGM,SAAS,IAAKF,iBAAiB,CAACF,IAAI,CAAC+B,QAAQ,EAAE3B,SAAS,CAAE;QAAAc,QAAA,gBAExEvB,OAAA,CAACF,IAAI;UAACO,IAAI,EAAED,KAAK,CAACC,IAAI,CAAC+B,QAAQ,CAAE;UAAClC,IAAI,EAAEA,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC+B,QAAQ;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACpE/B,OAAA,CAACF,IAAI;UAACO,IAAI,EAAED,KAAK,CAACC,IAAI,CAACgC,cAAc,CAAE;UAACnC,IAAI,EAAEA,IAAI,CAACE,KAAK,CAACC,IAAI,CAACgC,cAAc;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAChF/B,OAAA,CAACF,IAAI;UAACO,IAAI,EAAED,KAAK,CAACC,IAAI,CAACY,IAAI,CAAE;UAACf,IAAI,EAAEA,IAAI,CAACE,KAAK,CAACC,IAAI,CAACY,IAAI;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE5D/B,OAAA,CAACL,KAAK;UAAC8B,UAAU,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAE;UACjCO,iBAAiB,EAAE,CAACC,SAAS,EAAEA,SAAS,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAE;UACpDE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;UAClBrB,KAAK,EAAE,IAAK;UACZY,QAAQ,EAAE,CAACrB,IAAI,CAACa,OAAO,CAAE;UACzBf,QAAQ,EAAGM,SAAS,IAAKF,iBAAiB,CAACF,IAAI,CAACa,OAAO,EAAET,SAAS,CAAE;UAAAc,QAAA,eACvEvB,OAAA,CAACF,IAAI;YAACO,IAAI,EAAED,KAAK,CAACC,IAAI,CAACa,OAAO,CAAE;YAAChB,IAAI,EAAEA,IAAI,CAACE,KAAK,CAACC,IAAI,CAACa,OAAO;UAAE;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAEDnC,OAAO,CAAC0C,OAAO,CAAC,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}