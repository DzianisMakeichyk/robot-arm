{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera } from '@react-three/drei';\nimport { Shadows, Ground } from '@components/stage';\n// import socketIOClient, { Socket } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'ws://192.168.2.3:4000';\nexport default function App() {\n  const [robotData, setRobotData] = useState();\n  const [ws, setWs] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    // Próbujemy różnych wersji protokołu\n    const protocols = ['ws', 'wss', 'websocket'];\n    let connected = false;\n    const connectWebSocket = () => {\n      try {\n        console.log('Trying connection with standard WebSocket...');\n        const ws = new WebSocket(SOCKET_SERVER_URL);\n        ws.onopen = () => {\n          console.log('Connected successfully!');\n          setConnectionStatus('connected');\n          setWs(ws);\n          connected = true;\n        };\n        ws.onclose = event => {\n          console.log('Connection closed:', event.code, event.reason);\n          setConnectionStatus('disconnected');\n          setWs(null);\n        };\n        ws.onerror = error => {\n          console.log('Connection error details:', {\n            readyState: ws.readyState,\n            protocol: ws.protocol,\n            extensions: ws.extensions,\n            url: ws.url\n          });\n        };\n        return ws;\n      } catch (error) {\n        console.error('Failed to create WebSocket:', error);\n        return null;\n      }\n    };\n    const ws = connectWebSocket();\n\n    // Cleanup\n    return () => {\n      if (ws) {\n        ws.close();\n      }\n    };\n  }, []);\n  const testMotor = useCallback(() => {\n    if ((ws === null || ws === void 0 ? void 0 : ws.readyState) === WebSocket.OPEN) {\n      console.log('Sending test motor command...');\n      ws.send(JSON.stringify({\n        action: 'test_motor'\n      }));\n    } else {\n      console.log('WebSocket state:', ws === null || ws === void 0 ? void 0 : ws.readyState);\n      console.error('Cannot send - WebSocket not connected');\n    }\n  }, [ws]);\n  const testHTTP = async () => {\n    try {\n      const response = await fetch('http://192.168.2.3:4000');\n      console.log('HTTP test response:', response);\n    } catch (error) {\n      console.error('HTTP test failed:', error);\n    }\n  };\n\n  // Display error if any\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#ff4444',\n        color: 'white',\n        padding: '20px',\n        borderRadius: '5px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          marginTop: '10px',\n          padding: '5px 15px',\n          backgroundColor: 'white',\n          border: 'none',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testHTTP,\n        children: \"Test HTTP Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        left: '10px',\n        zIndex: 1000,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '5px',\n          background: connectionStatus === 'connected' ? '#4CAF50' : '#f44336',\n          color: 'white',\n          borderRadius: '4px'\n        },\n        children: [\"Socket Status: \", connectionStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testMotor,\n        style: {\n          padding: '10px',\n          background: '#2196F3',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Test Motor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), robotData && /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        fov: 40,\n        position: [10, 8, 25]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Shadows, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Environment, {\n        preset: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        makeDefault: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GizmoHelper, {\n        alignment: \"bottom-right\",\n        margin: [100, 100],\n        children: /*#__PURE__*/_jsxDEV(GizmoViewport, {\n          labelColor: \"white\",\n          axisHeadScale: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"names":["React","useState","useEffect","useCallback","Canvas","GizmoHelper","GizmoViewport","OrbitControls","Environment","Stats","PerspectiveCamera","Shadows","Ground","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_SERVER_URL","App","robotData","setRobotData","ws","setWs","connectionStatus","setConnectionStatus","error","setError","protocols","connected","connectWebSocket","console","log","WebSocket","onopen","onclose","event","code","reason","onerror","readyState","protocol","extensions","url","close","testMotor","OPEN","send","JSON","stringify","action","testHTTP","response","fetch","style","position","top","left","transform","backgroundColor","color","padding","borderRadius","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","marginTop","border","cursor","zIndex","display","flexDirection","gap","background","makeDefault","fov","preset","alignment","margin","labelColor","axisHeadScale"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport {Canvas} from '@react-three/fiber';\nimport {GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera} from '@react-three/drei';\nimport {Shadows, Ground} from '@components/stage';\n// import socketIOClient, { Socket } from 'socket.io-client';\nimport {Robot} from '@types';\nimport {RobotArm} from \"@components/model/RobotArm\";\n\nconst SOCKET_SERVER_URL = 'ws://192.168.2.3:4000';\n\nexport default function App() {\n    const [robotData, setRobotData] = useState<Robot.RobotNodes>();    \n    const [ws, setWs] = useState<WebSocket | null>(null);\n    const [connectionStatus, setConnectionStatus] = useState('disconnected');\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        // Próbujemy różnych wersji protokołu\n        const protocols = ['ws', 'wss', 'websocket'];\n        let connected = false;\n        \n        const connectWebSocket = () => {\n            try {\n                console.log('Trying connection with standard WebSocket...');\n                const ws = new WebSocket(SOCKET_SERVER_URL);\n    \n                ws.onopen = () => {\n                    console.log('Connected successfully!');\n                    setConnectionStatus('connected');\n                    setWs(ws);\n                    connected = true;\n                };\n    \n                ws.onclose = (event) => {\n                    console.log('Connection closed:', event.code, event.reason);\n                    setConnectionStatus('disconnected');\n                    setWs(null);\n                };\n    \n                ws.onerror = (error) => {\n                    console.log('Connection error details:', {\n                        readyState: ws.readyState,\n                        protocol: ws.protocol,\n                        extensions: ws.extensions,\n                        url: ws.url\n                    });\n                };\n    \n                return ws;\n            } catch (error) {\n                console.error('Failed to create WebSocket:', error);\n                return null;\n            }\n        };\n    \n        const ws = connectWebSocket();\n    \n        // Cleanup\n        return () => {\n            if (ws) {\n                ws.close();\n            }\n        };\n    }, []);\n\n    const testMotor = useCallback(() => {\n        if (ws?.readyState === WebSocket.OPEN) {\n            console.log('Sending test motor command...');\n            ws.send(JSON.stringify({ action: 'test_motor' }));\n        } else {\n            console.log('WebSocket state:', ws?.readyState);\n            console.error('Cannot send - WebSocket not connected');\n        }\n    }, [ws]);\n\n    const testHTTP = async () => {\n        try {\n            const response = await fetch('http://192.168.2.3:4000');\n            console.log('HTTP test response:', response);\n        } catch (error) {\n            console.error('HTTP test failed:', error);\n        }\n    };\n\n\n    // Display error if any\n    if (error) {\n        return (\n            <div style={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: '#ff4444',\n                color: 'white',\n                padding: '20px',\n                borderRadius: '5px',\n                textAlign: 'center'\n            }}>\n                <div>{error}</div>\n                <button \n                    onClick={() => window.location.reload()}\n                    style={{\n                        marginTop: '10px',\n                        padding: '5px 15px',\n                        backgroundColor: 'white',\n                        border: 'none',\n                        borderRadius: '3px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Retry\n                </button>\n                <button onClick={testHTTP}>Test HTTP Connection</button>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <div style={{\n                position: 'fixed',\n                top: '10px',\n                left: '10px',\n                zIndex: 1000,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '10px'\n            }}>\n                <div style={{\n                    padding: '5px',\n                    background: connectionStatus === 'connected' ? '#4CAF50' : '#f44336',\n                    color: 'white',\n                    borderRadius: '4px'\n                }}>\n                    Socket Status: {connectionStatus}\n                </div>\n                <button\n                    onClick={testMotor}\n                    style={{\n                        padding: '10px',\n                        background: '#2196F3',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Test Motor\n                </button>\n            </div>\n            {robotData && (\n                <Canvas>\n                    <PerspectiveCamera makeDefault fov={40} position={[10, 8, 25]}/>\n                    {/* <RobotArm data={robotData} onUpdate={updateRobotData}/> */}\n                    <Shadows/>\n                    <Ground/>\n                    <Environment preset=\"city\"/>\n                    <OrbitControls makeDefault/>\n                    <GizmoHelper alignment=\"bottom-right\" margin={[100, 100]}>\n                        <GizmoViewport labelColor=\"white\" axisHeadScale={1}/>\n                    </GizmoHelper>\n                    <Stats/>\n                </Canvas>\n            )}\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}