{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera } from '@react-three/drei';\nimport { Shadows, Ground } from '@components/stage';\n// import socketIOClient, { Socket } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'ws://localhost:4001';\nexport default function App() {\n  const [robotData, setRobotData] = useState();\n  const [ws, setWs] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    console.log('Starting WebSocket connection test...');\n    const ws = new WebSocket('ws://192.168.2.3:4000');\n    ws.onopen = () => {\n      console.log('WebSocket opened - sending test message');\n      ws.send('Hello from browser!');\n    };\n    ws.onmessage = event => {\n      console.log('Received message:', event.data);\n    };\n    ws.onerror = error => {\n      console.log('WebSocket Error State:', ws.readyState);\n      console.log('WebSocket Protocol:', ws.protocol);\n      console.log('WebSocket URL:', ws.url);\n      console.error('WebSocket error:', error);\n    };\n    ws.onclose = event => {\n      console.log('WebSocket closed:', {\n        code: event.code,\n        reason: event.reason,\n        wasClean: event.wasClean\n      });\n    };\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) {\n        ws.close();\n      }\n    };\n  }, []);\n  const testMotor = useCallback(() => {\n    if ((ws === null || ws === void 0 ? void 0 : ws.readyState) === WebSocket.OPEN) {\n      console.log('Sending test motor command...');\n      ws.send(JSON.stringify({\n        action: 'test_motor'\n      }));\n    } else {\n      console.log('WebSocket state:', ws === null || ws === void 0 ? void 0 : ws.readyState);\n      console.error('Cannot send - WebSocket not connected');\n    }\n  }, [ws]);\n  const testHTTP = async () => {\n    try {\n      const response = await fetch('http://192.168.2.3:4000');\n      console.log('HTTP test response:', response);\n    } catch (error) {\n      console.error('HTTP test failed:', error);\n    }\n  };\n\n  // Display error if any\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#ff4444',\n        color: 'white',\n        padding: '20px',\n        borderRadius: '5px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          marginTop: '10px',\n          padding: '5px 15px',\n          backgroundColor: 'white',\n          border: 'none',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        left: '10px',\n        zIndex: 1000,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '5px',\n          background: connectionStatus === 'connected' ? '#4CAF50' : '#f44336',\n          color: 'white',\n          borderRadius: '4px'\n        },\n        children: [\"Socket Status: \", connectionStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testMotor,\n        style: {\n          padding: '10px',\n          background: '#2196F3',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Test Motor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: testHTTP,\n        children: \"Test HTTP Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), robotData && /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        fov: 40,\n        position: [10, 8, 25]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Shadows, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Environment, {\n        preset: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        makeDefault: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GizmoHelper, {\n        alignment: \"bottom-right\",\n        margin: [100, 100],\n        children: /*#__PURE__*/_jsxDEV(GizmoViewport, {\n          labelColor: \"white\",\n          axisHeadScale: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"names":["React","useState","useEffect","useCallback","Canvas","GizmoHelper","GizmoViewport","OrbitControls","Environment","Stats","PerspectiveCamera","Shadows","Ground","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_SERVER_URL","App","robotData","setRobotData","ws","setWs","connectionStatus","setConnectionStatus","error","setError","console","log","WebSocket","onopen","send","onmessage","event","data","onerror","readyState","protocol","url","onclose","code","reason","wasClean","OPEN","close","testMotor","JSON","stringify","action","testHTTP","response","fetch","style","position","top","left","transform","backgroundColor","color","padding","borderRadius","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","marginTop","border","cursor","zIndex","display","flexDirection","gap","background","makeDefault","fov","preset","alignment","margin","labelColor","axisHeadScale"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport {Canvas} from '@react-three/fiber';\nimport {GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera} from '@react-three/drei';\nimport {Shadows, Ground} from '@components/stage';\n// import socketIOClient, { Socket } from 'socket.io-client';\nimport {Robot} from '@types';\nimport {RobotArm} from \"@components/model/RobotArm\";\n\nconst SOCKET_SERVER_URL = 'ws://localhost:4001';\n\nexport default function App() {\n    const [robotData, setRobotData] = useState<Robot.RobotNodes>();    \n    const [ws, setWs] = useState<WebSocket | null>(null);\n    const [connectionStatus, setConnectionStatus] = useState('disconnected');\n    const [error, setError] = useState<string>('');\n\n    useEffect(() => {\n        console.log('Starting WebSocket connection test...');\n        \n        const ws = new WebSocket('ws://192.168.2.3:4000');\n        \n        ws.onopen = () => {\n            console.log('WebSocket opened - sending test message');\n            ws.send('Hello from browser!');\n        };\n    \n        ws.onmessage = (event) => {\n            console.log('Received message:', event.data);\n        };\n    \n        ws.onerror = (error) => {\n            console.log('WebSocket Error State:', ws.readyState);\n            console.log('WebSocket Protocol:', ws.protocol);\n            console.log('WebSocket URL:', ws.url);\n            console.error('WebSocket error:', error);\n        };\n    \n        ws.onclose = (event) => {\n            console.log('WebSocket closed:', {\n                code: event.code,\n                reason: event.reason,\n                wasClean: event.wasClean\n            });\n        };\n    \n        return () => {\n            if (ws.readyState === WebSocket.OPEN) {\n                ws.close();\n            }\n        };\n    }, []);\n\n    const testMotor = useCallback(() => {\n        if (ws?.readyState === WebSocket.OPEN) {\n            console.log('Sending test motor command...');\n            ws.send(JSON.stringify({ action: 'test_motor' }));\n        } else {\n            console.log('WebSocket state:', ws?.readyState);\n            console.error('Cannot send - WebSocket not connected');\n        }\n    }, [ws]);\n\n    const testHTTP = async () => {\n        try {\n            const response = await fetch('http://192.168.2.3:4000');\n            console.log('HTTP test response:', response);\n        } catch (error) {\n            console.error('HTTP test failed:', error);\n        }\n    };\n\n\n    // Display error if any\n    if (error) {\n        return (\n            <div style={{\n                position: 'fixed',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: '#ff4444',\n                color: 'white',\n                padding: '20px',\n                borderRadius: '5px',\n                textAlign: 'center'\n            }}>\n                <div>{error}</div>\n                <button \n                    onClick={() => window.location.reload()}\n                    style={{\n                        marginTop: '10px',\n                        padding: '5px 15px',\n                        backgroundColor: 'white',\n                        border: 'none',\n                        borderRadius: '3px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Retry\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            <div style={{\n                position: 'fixed',\n                top: '10px',\n                left: '10px',\n                zIndex: 1000,\n                display: 'flex',\n                flexDirection: 'column',\n                gap: '10px'\n            }}>\n                <div style={{\n                    padding: '5px',\n                    background: connectionStatus === 'connected' ? '#4CAF50' : '#f44336',\n                    color: 'white',\n                    borderRadius: '4px'\n                }}>\n                    Socket Status: {connectionStatus}\n                </div>\n                <button\n                    onClick={testMotor}\n                    style={{\n                        padding: '10px',\n                        background: '#2196F3',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Test Motor\n                </button>\n\n                <button onClick={testHTTP}>Test HTTP Connection</button>\n            </div>\n            {robotData && (\n                <Canvas>\n                    <PerspectiveCamera makeDefault fov={40} position={[10, 8, 25]}/>\n                    {/* <RobotArm data={robotData} onUpdate={updateRobotData}/> */}\n                    <Shadows/>\n                    <Ground/>\n                    <Environment preset=\"city\"/>\n                    <OrbitControls makeDefault/>\n                    <GizmoHelper alignment=\"bottom-right\" margin={[100, 100]}>\n                        <GizmoViewport labelColor=\"white\" axisHeadScale={1}/>\n                    </GizmoHelper>\n                    <Stats/>\n                </Canvas>\n            )}\n        </>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}