{"ast":null,"code":"var _jsxFileName = \"/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera } from '@react-three/drei';\nimport { Shadows, Ground } from '@components/stage';\nimport { io } from 'socket.io-client';\nimport { RobotArm } from \"@components/model/RobotArm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'http://localhost:4000';\nexport default function App() {\n  _s();\n  const [robotData, setRobotData] = useState();\n  const [socket, setSocket] = useState(null);\n  const [connectionError, setConnectionError] = useState('');\n  useEffect(() => {\n    // Initialize socket connection with proper configuration\n    const newSocket = io(SOCKET_SERVER_URL, {\n      withCredentials: true,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      reconnectionAttempts: 5,\n      autoConnect: true,\n      transports: ['polling', 'websocket'],\n      upgrade: true,\n      forceNew: true\n    });\n\n    // Connection event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to server:', newSocket.id);\n      setConnectionError('');\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setConnectionError(`Connection error: ${error.message}`);\n    });\n    newSocket.on('disconnect', reason => {\n      console.log('Disconnected:', reason);\n      if (reason === 'io server disconnect') {\n        newSocket.connect();\n      }\n    });\n    newSocket.on('error', error => {\n      console.error('Socket error:', error);\n      setConnectionError(`Socket error: ${error.message}`);\n    });\n    setSocket(newSocket);\n\n    // Clean up on unmount\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!(socket !== null && socket !== void 0 && socket.connected)) return;\n    if (!robotData) {\n      console.log('Requesting initial state...');\n      socket.emit(\"state:get\");\n    }\n    const handleState = data => {\n      console.log('Received state:', data);\n      setRobotData(data);\n    };\n    socket.on(\"state\", handleState);\n    return () => {\n      socket.off(\"state\", handleState);\n    };\n  }, [socket, robotData]);\n  const updateRobotData = useCallback(newData => {\n    if (!(socket !== null && socket !== void 0 && socket.connected)) return;\n    setRobotData(prevData => {\n      if (prevData) {\n        const updatedData = {\n          ...prevData,\n          ...newData\n        };\n        console.log('Updating state:', updatedData);\n        socket.emit(\"state:update\", updatedData);\n        return updatedData;\n      }\n      return prevData;\n    });\n  }, [socket]);\n\n  // Show connection error if any\n  if (connectionError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        padding: '20px',\n        backgroundColor: '#ff4444',\n        color: 'white',\n        borderRadius: '5px',\n        zIndex: 1000\n      },\n      children: [connectionError, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          marginLeft: '10px',\n          padding: '5px 10px',\n          backgroundColor: 'white',\n          border: 'none',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Retry Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: robotData && /*#__PURE__*/_jsxDEV(Canvas, {\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        fov: 40,\n        position: [10, 8, 25]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RobotArm, {\n        data: robotData,\n        onUpdate: updateRobotData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Shadows, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Ground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Environment, {\n        preset: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        makeDefault: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GizmoHelper, {\n        alignment: \"bottom-right\",\n        margin: [100, 100],\n        children: /*#__PURE__*/_jsxDEV(GizmoViewport, {\n          labelColor: \"white\",\n          axisHeadScale: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"0BL5ZnefTqSGdbCcOVfv3rtWhWs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Canvas","GizmoHelper","GizmoViewport","OrbitControls","Environment","Stats","PerspectiveCamera","Shadows","Ground","io","RobotArm","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_SERVER_URL","App","_s","robotData","setRobotData","socket","setSocket","connectionError","setConnectionError","newSocket","withCredentials","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","autoConnect","transports","upgrade","forceNew","on","console","log","id","error","message","reason","connect","disconnect","connected","emit","handleState","data","off","updateRobotData","newData","prevData","updatedData","style","position","top","left","transform","padding","backgroundColor","color","borderRadius","zIndex","children","onClick","window","location","reload","marginLeft","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","makeDefault","fov","onUpdate","preset","alignment","margin","labelColor","axisHeadScale","_c","$RefreshReg$"],"sources":["/Users/dzianismakeichyk/Documents/projects/robot-fun/robot-arm/hmi/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect, useCallback} from 'react'\nimport {Canvas} from '@react-three/fiber'\nimport {GizmoHelper, GizmoViewport, OrbitControls, Environment, Stats, PerspectiveCamera} from '@react-three/drei'\nimport {Shadows, Ground} from '@components/stage'\nimport { io } from 'socket.io-client'\nimport {Robot} from '@types'\nimport {RobotArm} from \"@components/model/RobotArm\"\n\nconst SOCKET_SERVER_URL = 'http://localhost:4000';\n\nexport default function App() {\n    const [robotData, setRobotData] = useState<Robot.RobotNodes>()\n    const [socket, setSocket] = useState<any>(null);\n    const [connectionError, setConnectionError] = useState<string>('');\n\n    useEffect(() => {\n        // Initialize socket connection with proper configuration\n        const newSocket = io(SOCKET_SERVER_URL, {\n            withCredentials: true,\n            reconnectionDelay: 1000,\n            reconnectionDelayMax: 5000,\n            reconnectionAttempts: 5,\n            autoConnect: true,\n            transports: ['polling', 'websocket'],\n            upgrade: true,\n            forceNew: true\n        });\n\n        // Connection event handlers\n        newSocket.on('connect', () => {\n            console.log('Connected to server:', newSocket.id);\n            setConnectionError('');\n        });\n\n        newSocket.on('connect_error', (error) => {\n            console.error('Connection error:', error);\n            setConnectionError(`Connection error: ${error.message}`);\n        });\n\n        newSocket.on('disconnect', (reason) => {\n            console.log('Disconnected:', reason);\n            if (reason === 'io server disconnect') {\n                newSocket.connect();\n            }\n        });\n\n        newSocket.on('error', (error) => {\n            console.error('Socket error:', error);\n            setConnectionError(`Socket error: ${error.message}`);\n        });\n\n        setSocket(newSocket);\n\n        // Clean up on unmount\n        return () => {\n            if (newSocket) {\n                newSocket.disconnect();\n            }\n        };\n    }, []);\n\n    useEffect(() => {\n        if (!socket?.connected) return;\n\n        if (!robotData) {\n            console.log('Requesting initial state...');\n            socket.emit(\"state:get\");\n        }\n\n        const handleState = (data: Robot.RobotNodes) => {\n            console.log('Received state:', data);\n            setRobotData(data);\n        };\n\n        socket.on(\"state\", handleState);\n\n        return () => {\n            socket.off(\"state\", handleState);\n        };\n    }, [socket, robotData]);\n\n    const updateRobotData = useCallback((newData: Partial<Robot.RobotNodes>) => {\n        if (!socket?.connected) return;\n\n        setRobotData(prevData => {\n            if (prevData) {\n                const updatedData = {...prevData, ...newData};\n                console.log('Updating state:', updatedData);\n                socket.emit(\"state:update\", updatedData);\n                return updatedData;\n            }\n            return prevData;\n        });\n    }, [socket]);\n\n    // Show connection error if any\n    if (connectionError) {\n        return (\n            <div style={{ \n                position: 'fixed', \n                top: '50%', \n                left: '50%', \n                transform: 'translate(-50%, -50%)',\n                padding: '20px',\n                backgroundColor: '#ff4444',\n                color: 'white',\n                borderRadius: '5px',\n                zIndex: 1000\n            }}>\n                {connectionError}\n                <button \n                    onClick={() => window.location.reload()}\n                    style={{\n                        marginLeft: '10px',\n                        padding: '5px 10px',\n                        backgroundColor: 'white',\n                        border: 'none',\n                        borderRadius: '3px',\n                        cursor: 'pointer'\n                    }}\n                >\n                    Retry Connection\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            {robotData &&\n                <Canvas>\n                    <PerspectiveCamera makeDefault fov={40} position={[10, 8, 25]}/>\n                    <RobotArm data={robotData} onUpdate={updateRobotData}/>\n                    <Shadows/>\n                    <Ground/>\n                    <Environment preset=\"city\"/>\n                    <OrbitControls makeDefault/>\n                    <GizmoHelper alignment=\"bottom-right\" margin={[100, 100]}>\n                        <GizmoViewport labelColor=\"white\" axisHeadScale={1}/>\n                    </GizmoHelper>\n                    <Stats/>\n                </Canvas>\n            }\n        </>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAO,OAAO;AAC7D,SAAQC,MAAM,QAAO,oBAAoB;AACzC,SAAQC,WAAW,EAAEC,aAAa,EAAEC,aAAa,EAAEC,WAAW,EAAEC,KAAK,EAAEC,iBAAiB,QAAO,mBAAmB;AAClH,SAAQC,OAAO,EAAEC,MAAM,QAAO,mBAAmB;AACjD,SAASC,EAAE,QAAQ,kBAAkB;AAErC,SAAQC,QAAQ,QAAO,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,MAAMC,iBAAiB,GAAG,uBAAuB;AAEjD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAmB,CAAC;EAC9D,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAM,IAAI,CAAC;EAC/C,MAAM,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAS,EAAE,CAAC;EAElEC,SAAS,CAAC,MAAM;IACZ;IACA,MAAM0B,SAAS,GAAGf,EAAE,CAACM,iBAAiB,EAAE;MACpCU,eAAe,EAAE,IAAI;MACrBC,iBAAiB,EAAE,IAAI;MACvBC,oBAAoB,EAAE,IAAI;MAC1BC,oBAAoB,EAAE,CAAC;MACvBC,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;MACpCC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE;IACd,CAAC,CAAC;;IAEF;IACAR,SAAS,CAACS,EAAE,CAAC,SAAS,EAAE,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEX,SAAS,CAACY,EAAE,CAAC;MACjDb,kBAAkB,CAAC,EAAE,CAAC;IAC1B,CAAC,CAAC;IAEFC,SAAS,CAACS,EAAE,CAAC,eAAe,EAAGI,KAAK,IAAK;MACrCH,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCd,kBAAkB,CAAC,qBAAqBc,KAAK,CAACC,OAAO,EAAE,CAAC;IAC5D,CAAC,CAAC;IAEFd,SAAS,CAACS,EAAE,CAAC,YAAY,EAAGM,MAAM,IAAK;MACnCL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEI,MAAM,CAAC;MACpC,IAAIA,MAAM,KAAK,sBAAsB,EAAE;QACnCf,SAAS,CAACgB,OAAO,CAAC,CAAC;MACvB;IACJ,CAAC,CAAC;IAEFhB,SAAS,CAACS,EAAE,CAAC,OAAO,EAAGI,KAAK,IAAK;MAC7BH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCd,kBAAkB,CAAC,iBAAiBc,KAAK,CAACC,OAAO,EAAE,CAAC;IACxD,CAAC,CAAC;IAEFjB,SAAS,CAACG,SAAS,CAAC;;IAEpB;IACA,OAAO,MAAM;MACT,IAAIA,SAAS,EAAE;QACXA,SAAS,CAACiB,UAAU,CAAC,CAAC;MAC1B;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN3C,SAAS,CAAC,MAAM;IACZ,IAAI,EAACsB,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEsB,SAAS,GAAE;IAExB,IAAI,CAACxB,SAAS,EAAE;MACZgB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1Cf,MAAM,CAACuB,IAAI,CAAC,WAAW,CAAC;IAC5B;IAEA,MAAMC,WAAW,GAAIC,IAAsB,IAAK;MAC5CX,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEU,IAAI,CAAC;MACpC1B,YAAY,CAAC0B,IAAI,CAAC;IACtB,CAAC;IAEDzB,MAAM,CAACa,EAAE,CAAC,OAAO,EAAEW,WAAW,CAAC;IAE/B,OAAO,MAAM;MACTxB,MAAM,CAAC0B,GAAG,CAAC,OAAO,EAAEF,WAAW,CAAC;IACpC,CAAC;EACL,CAAC,EAAE,CAACxB,MAAM,EAAEF,SAAS,CAAC,CAAC;EAEvB,MAAM6B,eAAe,GAAGhD,WAAW,CAAEiD,OAAkC,IAAK;IACxE,IAAI,EAAC5B,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEsB,SAAS,GAAE;IAExBvB,YAAY,CAAC8B,QAAQ,IAAI;MACrB,IAAIA,QAAQ,EAAE;QACV,MAAMC,WAAW,GAAG;UAAC,GAAGD,QAAQ;UAAE,GAAGD;QAAO,CAAC;QAC7Cd,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEe,WAAW,CAAC;QAC3C9B,MAAM,CAACuB,IAAI,CAAC,cAAc,EAAEO,WAAW,CAAC;QACxC,OAAOA,WAAW;MACtB;MACA,OAAOD,QAAQ;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAAC7B,MAAM,CAAC,CAAC;;EAEZ;EACA,IAAIE,eAAe,EAAE;IACjB,oBACIV,OAAA;MAAKuC,KAAK,EAAE;QACRC,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,uBAAuB;QAClCC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACZ,CAAE;MAAAC,QAAA,GACGvC,eAAe,eAChBV,OAAA;QACIkD,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;QACxCd,KAAK,EAAE;UACHe,UAAU,EAAE,MAAM;UAClBV,OAAO,EAAE,UAAU;UACnBC,eAAe,EAAE,OAAO;UACxBU,MAAM,EAAE,MAAM;UACdR,YAAY,EAAE,KAAK;UACnBS,MAAM,EAAE;QACZ,CAAE;QAAAP,QAAA,EACL;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEd;EAEA,oBACI5D,OAAA,CAAAE,SAAA;IAAA+C,QAAA,EACK3C,SAAS,iBACNN,OAAA,CAACZ,MAAM;MAAA6D,QAAA,gBACHjD,OAAA,CAACN,iBAAiB;QAACmE,WAAW;QAACC,GAAG,EAAE,EAAG;QAACtB,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChE5D,OAAA,CAACF,QAAQ;QAACmC,IAAI,EAAE3B,SAAU;QAACyD,QAAQ,EAAE5B;MAAgB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvD5D,OAAA,CAACL,OAAO;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACV5D,OAAA,CAACJ,MAAM;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACT5D,OAAA,CAACR,WAAW;QAACwE,MAAM,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5B5D,OAAA,CAACT,aAAa;QAACsE,WAAW;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC5B5D,OAAA,CAACX,WAAW;QAAC4E,SAAS,EAAC,cAAc;QAACC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAE;QAAAjB,QAAA,eACrDjD,OAAA,CAACV,aAAa;UAAC6E,UAAU,EAAC,OAAO;UAACC,aAAa,EAAE;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACd5D,OAAA,CAACP,KAAK;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBAEf,CAAC;AAEX;AAACvD,EAAA,CAvIuBD,GAAG;AAAAiE,EAAA,GAAHjE,GAAG;AAAA,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}